Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
SMARTINDONASIA_API_SmokeTest,,,,2019-09-26 20:33:22,2019-09-26 20:34:30,1m - 7.790s,INCOMPLETE
,,,,,,,
Test Cases/a.ValidateMobileNumber_Test,,,,2019-09-26 20:33:22,2019-09-26 20:33:27,4.686s,PASSED
"sendRequest(findTestObject(""aValidate Mobile Number"", [""protocal"":Endpoint]))",,,,2019-09-26 20:33:23,2019-09-26 20:33:26,3.265s,PASSED
"response = sendRequestAndVerify(findTestObject(""aValidate Mobile Number"", [""protocal"":Endpoint]))",,,,2019-09-26 20:33:26,2019-09-26 20:33:27,0.958s,PASSED
slurper = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:27,2019-09-26 20:33:27,0.010s,PASSED
result = slurper.parseText(response.getResponseText()),,,,2019-09-26 20:33:27,2019-09-26 20:33:27,0.023s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:27,2019-09-26 20:33:27,0.006s,PASSED
"println(""THIS IS THE RESPONSE FROM VALIDATEMOBILENUMBER TEST CASE = "" + result)",,,,2019-09-26 20:33:27,2019-09-26 20:33:27,0.003s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:27,2019-09-26 20:33:27,0.002s,PASSED
value = uniqueTokenCode,,,,2019-09-26 20:33:27,2019-09-26 20:33:27,0.009s,PASSED
println(value),,,,2019-09-26 20:33:27,2019-09-26 20:33:27,0.002s,PASSED
uniquetoken = value,,,,2019-09-26 20:33:27,2019-09-26 20:33:27,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:27,2019-09-26 20:33:27,0.003s,PASSED
"println(""UNIQ TOKEN ID IS GENARATED  = "" + uniquetoken)",,,,2019-09-26 20:33:27,2019-09-26 20:33:27,0.002s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:27,2019-09-26 20:33:27,0.001s,PASSED
,,,,,,,
Test Cases/aValidate_OTPTest,,,,2019-09-26 20:33:27,2019-09-26 20:33:28,0.953s,PASSED
"sendRequest(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 20:33:27,2019-09-26 20:33:27,0.280s,PASSED
"response1 = sendRequest(findTestObject(""aValidate Mobile Number""))",,,,2019-09-26 20:33:27,2019-09-26 20:33:28,0.322s,PASSED
slurper1 = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.008s,PASSED
result1 = slurper1.parseText(responseBodyContent),,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.006s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.005s,PASSED
"println(""THIS IS THE RESPONSE FROM VALIDATEOTP TEST CASE = "" + result1)",,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.002s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.001s,PASSED
value1 = userId,,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.003s,PASSED
userid = value1,,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.001s,PASSED
"println(""THE USER ID IS GENARATED  = "" + userid)",,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.004s,PASSED
,,,,,,,
Test Cases/bInsertUser_CheckInTest,,,,2019-09-26 20:33:28,2019-09-26 20:33:29,0.928s,PASSED
chkInID = toString().toUpperCase(),,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.007s,PASSED
println(chkInID),,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.001s,PASSED
f = new java.io.File(D:\SmartDoxApiResponse\CtID.txt),,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.002s,PASSED
f.write(chkInID),,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.004s,PASSED
now = new java.util.Date(),,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.009s,PASSED
"chkInTime = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.004s,PASSED
println(chkInTime),,,,2019-09-26 20:33:28,2019-09-26 20:33:28,0.001s,PASSED
"resp3 = sendRequest(findTestObject(""bInsert User CheckIn"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""checkInTime"":chkInTime, ""checkInID"":chkInID, ""checkinLocality"":checkinLocality]))",,,,2019-09-26 20:33:28,2019-09-26 20:33:29,0.350s,PASSED
slurper3 = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.000s,PASSED
result3 = slurper3.parseText(resp3.getResponseText()),,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.000s,PASSED
"println(""***************************************
"")",,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM USER_CHECKIN TEST CASE = "" + result3)",,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.000s,PASSED
"println(""***************************************
"")",,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.000s,PASSED
"toString().split(chkInID, 0)",,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.001s,PASSED
"value3 = toString().substring(11, 47)",,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.000s,PASSED
println(value3),,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.004s,PASSED
"println(""THE CHECKIN  iD IS   = "" + value3)",,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.001s,PASSED
f = new java.io.File(D:\Checkin_ID.txt),,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.001s,PASSED
f.write(value3),,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.020s,PASSED
,,,,,,,
Test Cases/bUpdateUser_CheckInTest,,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.665s,PASSED
file3 = new java.io.File(D:\Checkin_ID.txt),,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.000s,PASSED
checkinID = file3.readLines(),,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.010s,PASSED
"println(""-------------->"" + checkinID)",,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.000s,PASSED
now1 = new java.util.Date(),,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.000s,PASSED
"chkOutTime = now1.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.000s,PASSED
println(chkOutTime),,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.010s,PASSED
"resp4 = sendRequest(findTestObject(""bUpdate User CheckIn"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""checkinID"":checkinID, ""checkedOutTime"":chkOutTime]))",,,,2019-09-26 20:33:29,2019-09-26 20:33:29,0.329s,PASSED
,,,,,,,
Test Cases/cInsertTripDetails_Test,,,,2019-09-26 20:33:29,2019-09-26 20:33:31,2.046s,PASSED
"sendRequestAndVerify(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 20:33:30,2019-09-26 20:33:30,0.693s,PASSED
triPID = toString().toUpperCase(),,,,2019-09-26 20:33:30,2019-09-26 20:33:30,0.000s,PASSED
println(triPID),,,,2019-09-26 20:33:30,2019-09-26 20:33:30,0.000s,PASSED
now = new java.util.Date(),,,,2019-09-26 20:33:30,2019-09-26 20:33:30,0.000s,PASSED
"tiMe = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:33:30,2019-09-26 20:33:30,0.000s,PASSED
println(tiMe),,,,2019-09-26 20:33:30,2019-09-26 20:33:30,0.000s,PASSED
"resp2 = sendRequest(findTestObject(""cInsert Trip Detail"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""tripid"":triPID, ""startriptime"":tiMe, ""startripLocality"":startripLocality]))",,,,2019-09-26 20:33:30,2019-09-26 20:33:31,0.274s,PASSED
slurper2 = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:31,2019-09-26 20:33:31,0.000s,PASSED
result2 = slurper2.parseText(resp2.getResponseText()),,,,2019-09-26 20:33:31,2019-09-26 20:33:31,0.000s,PASSED
"println(""***************************************
"")",,,,2019-09-26 20:33:31,2019-09-26 20:33:31,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM INSERT TRIP DETAILS  TEST CASE = "" + result2)",,,,2019-09-26 20:33:31,2019-09-26 20:33:31,0.010s,PASSED
"println(""***************************************
"")",,,,2019-09-26 20:33:31,2019-09-26 20:33:31,0.000s,PASSED
"toString().split(triPID, 0)",,,,2019-09-26 20:33:31,2019-09-26 20:33:31,0.000s,PASSED
"value2 = toString().substring(25, 61)",,,,2019-09-26 20:33:31,2019-09-26 20:33:31,0.000s,PASSED
println(value2),,,,2019-09-26 20:33:31,2019-09-26 20:33:31,0.000s,PASSED
"println(""THE TRIP iD IS   = "" + value2)",,,,2019-09-26 20:33:31,2019-09-26 20:33:31,0.020s,PASSED
f = new java.io.File(D:\InsertTripDetails_ID.txt),,,,2019-09-26 20:33:31,2019-09-26 20:33:31,0.000s,PASSED
f.write(value2),,,,2019-09-26 20:33:31,2019-09-26 20:33:31,0.000s,PASSED
,,,,,,,
Test Cases/cUpdateTripDetails_Test,,,,2019-09-26 20:33:31,2019-09-26 20:33:32,0.816s,ERROR
file1 = new java.io.File(D:\InsertTripDetails_ID.txt),,,,2019-09-26 20:33:32,2019-09-26 20:33:32,0.004s,PASSED
triPID = file1.readLines(),,,,2019-09-26 20:33:32,2019-09-26 20:33:32,0.002s,PASSED
"println(""-------------->"" + triPID)",,,,2019-09-26 20:33:32,2019-09-26 20:33:32,0.001s,PASSED
"sendRequest(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 20:33:32,2019-09-26 20:33:32,0.273s,PASSED
"responseD = sendRequest(findTestObject(""cUpdate Trip Detail"", [""uptripiD"":triPID, ""userId"":userid]))",,,,2019-09-26 20:33:32,2019-09-26 20:33:32,0.204s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:32,2019-09-26 20:33:32,0.000s,PASSED
resultt = slurpert.parseText(responseD.getResponseText()),,,,2019-09-26 20:33:32,2019-09-26 20:33:32,0.000s,PASSED
,,,,,,,
Test Cases/d.VersionMaster_Test,,,,2019-09-26 20:33:32,2019-09-26 20:33:34,1.479s,PASSED
"responseD = sendRequestAndVerify(findTestObject(""d.Version Master"", [""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:33:32,2019-09-26 20:33:34,1.294s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:34,2019-09-26 20:33:34,0.000s,PASSED
resultt = slurpert.parseText(responseD.getResponseText()),,,,2019-09-26 20:33:34,2019-09-26 20:33:34,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:34,2019-09-26 20:33:34,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM VERSION MASTER TEST CASE = "" + resultt)",,,,2019-09-26 20:33:34,2019-09-26 20:33:34,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:34,2019-09-26 20:33:34,0.000s,PASSED
,,,,,,,
Test Cases/dLeaveType_Test,,,,2019-09-26 20:33:34,2019-09-26 20:33:35,0.947s,PASSED
"responseD = sendRequestAndVerify(findTestObject(""eLeave Type"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:33:34,2019-09-26 20:33:35,0.744s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:35,2019-09-26 20:33:35,0.000s,PASSED
resultt = slurpert.parseText(responseD.getResponseText()),,,,2019-09-26 20:33:35,2019-09-26 20:33:35,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:35,2019-09-26 20:33:35,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM LEAVE TYPE  TEST CASE = "" + resultt)",,,,2019-09-26 20:33:35,2019-09-26 20:33:35,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:35,2019-09-26 20:33:35,0.000s,PASSED
,,,,,,,
Test Cases/eLeaveApplication_Test,,,,2019-09-26 20:33:35,2019-09-26 20:33:36,0.863s,PASSED
"responseE = sendRequestAndVerify(findTestObject(""eLeave Application"", [""leavetypeId"":leavetypeId, ""fromdaTe"":fromdaTe, ""todaTe"":todaTe, ""commenTs"":commenTs, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:33:35,2019-09-26 20:33:36,0.613s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:36,2019-09-26 20:33:36,0.000s,PASSED
resultt = slurpert.parseText(responseE.getResponseText()),,,,2019-09-26 20:33:36,2019-09-26 20:33:36,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:36,2019-09-26 20:33:36,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM LEAVE APPLICATION TEST CASE = "" + resultt)",,,,2019-09-26 20:33:36,2019-09-26 20:33:36,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:36,2019-09-26 20:33:36,0.000s,PASSED
,,,,,,,
Test Cases/eLeaveCancelApplicationTest,,,,2019-09-26 20:33:36,2019-09-26 20:33:37,1.812s,PASSED
"responsee = sendRequestAndVerify(findTestObject(""eLeave Cancel Application"", [""userId"":userid, ""uniqueToken"":uniquetoken, ""fromdaTe"":fromdaTe, ""todaTe"":todaTe]))",,,,2019-09-26 20:33:36,2019-09-26 20:33:37,1.043s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:37,2019-09-26 20:33:37,0.000s,PASSED
resultt = slurpert.parseText(responsee.getResponseText()),,,,2019-09-26 20:33:37,2019-09-26 20:33:37,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:37,2019-09-26 20:33:37,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM LEAVE CANCEL APPLICATION TEST CASE = "" + resultt)",,,,2019-09-26 20:33:37,2019-09-26 20:33:37,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:37,2019-09-26 20:33:37,0.000s,PASSED
,,,,,,,
Test Cases/gCropMasterTest,,,,2019-09-26 20:33:37,2019-09-26 20:33:39,2.000s,PASSED
"responseg = sendRequestAndVerify(findTestObject(""gCrop-Master"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:33:38,2019-09-26 20:33:38,0.674s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:38,2019-09-26 20:33:39,0.481s,PASSED
resultt = slurpert.parseText(responseg.getResponseText()),,,,2019-09-26 20:33:39,2019-09-26 20:33:39,0.629s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:39,2019-09-26 20:33:39,0.010s,PASSED
"println(""THIS IS THE RESPONSE FROM CROP MASTER TEST CASE = "" + resultt)",,,,2019-09-26 20:33:39,2019-09-26 20:33:39,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:39,2019-09-26 20:33:39,0.000s,PASSED
,,,,,,,
Test Cases/hProductMaster_Test,,,,2019-09-26 20:33:39,2019-09-26 20:33:40,0.836s,PASSED
"responseh = sendRequestAndVerify(findTestObject(""iUser_Crop_Product"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:33:40,2019-09-26 20:33:40,0.614s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:40,2019-09-26 20:33:40,0.000s,PASSED
resultt = slurpert.parseText(responseh.getResponseText()),,,,2019-09-26 20:33:40,2019-09-26 20:33:40,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:40,2019-09-26 20:33:40,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM PRODUCT MASTER TEST CASE = "" + resultt)",,,,2019-09-26 20:33:40,2019-09-26 20:33:40,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:40,2019-09-26 20:33:40,0.000s,PASSED
,,,,,,,
Test Cases/iUserCropProduct_Test,,,,2019-09-26 20:33:40,2019-09-26 20:33:42,1.304s,PASSED
"responsei = sendRequestAndVerify(findTestObject(""iUser_Crop_Product"", [""versiontableId"":"""", ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:33:41,2019-09-26 20:33:42,1.057s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:42,2019-09-26 20:33:42,0.000s,PASSED
resultt = slurpert.parseText(responsei.getResponseText()),,,,2019-09-26 20:33:42,2019-09-26 20:33:42,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:42,2019-09-26 20:33:42,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM USER CROP PRODUCT TEST CASE = "" + resultt)",,,,2019-09-26 20:33:42,2019-09-26 20:33:42,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:42,2019-09-26 20:33:42,0.020s,PASSED
,,,,,,,
Test Cases/jUserGeographyDetails_Test,,,,2019-09-26 20:33:42,2019-09-26 20:33:44,1.896s,PASSED
"responsej = sendRequestAndVerify(findTestObject(""jUser Geography Details"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:33:43,2019-09-26 20:33:44,1.003s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:44,2019-09-26 20:33:44,0.000s,PASSED
resultt = slurpert.parseText(responsej.getResponseText()),,,,2019-09-26 20:33:44,2019-09-26 20:33:44,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:44,2019-09-26 20:33:44,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM USER GEOGRAPY DETAILS TEST CASE = "" + resultt)",,,,2019-09-26 20:33:44,2019-09-26 20:33:44,0.012s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:44,2019-09-26 20:33:44,0.001s,PASSED
,,,,,,,
Test Cases/kUserTimeline_Test,,,,2019-09-26 20:33:44,2019-09-26 20:33:45,0.991s,PASSED
"responsek = sendRequestAndVerify(findTestObject(""kUserTimeline"", [""fromdaTe"":fromdaTe, ""todaTe"":todaTe, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:33:44,2019-09-26 20:33:45,0.724s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:45,2019-09-26 20:33:45,0.001s,PASSED
resultt = slurpert.parseText(responsek.getResponseText()),,,,2019-09-26 20:33:45,2019-09-26 20:33:45,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:45,2019-09-26 20:33:45,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM USER TIMELINE TEST CASE = "" + resultt)",,,,2019-09-26 20:33:45,2019-09-26 20:33:45,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:45,2019-09-26 20:33:45,0.000s,PASSED
,,,,,,,
Test Cases/lSeverityMaster_Test,,,,2019-09-26 20:33:45,2019-09-26 20:33:46,0.950s,PASSED
"responsei = sendRequestAndVerify(findTestObject(""lSeverity Master"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:33:45,2019-09-26 20:33:46,0.707s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:46,2019-09-26 20:33:46,0.000s,PASSED
resultt = slurpert.parseText(responsei.getResponseText()),,,,2019-09-26 20:33:46,2019-09-26 20:33:46,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:46,2019-09-26 20:33:46,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM SEVERITY MASTER TEST CASE = "" + resultt)",,,,2019-09-26 20:33:46,2019-09-26 20:33:46,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:46,2019-09-26 20:33:46,0.000s,PASSED
,,,,,,,
Test Cases/mQuestionAnswerMaster_Test,,,,2019-09-26 20:33:46,2019-09-26 20:33:47,1.866s,PASSED
"responsem = sendRequestAndVerify(findTestObject(""mQuestion Answer Master"", [""lobID"":lobID, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:33:47,2019-09-26 20:33:47,0.782s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:47,2019-09-26 20:33:47,0.000s,PASSED
resultt = slurpert.parseText(responsem.getResponseText()),,,,2019-09-26 20:33:47,2019-09-26 20:33:47,0.010s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:47,2019-09-26 20:33:47,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM QUESTION ANSWER MASTER TEST CASE = "" + resultt)",,,,2019-09-26 20:33:47,2019-09-26 20:33:47,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:47,2019-09-26 20:33:47,0.000s,PASSED
,,,,,,,
Test Cases/nHolidayMaster_Test,,,,2019-09-26 20:33:48,2019-09-26 20:33:49,1.229s,PASSED
"responsen = sendRequestAndVerify(findTestObject(""nHoliday Master"", [""versiontableId"":versiontableId, ""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 20:33:48,2019-09-26 20:33:49,0.978s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:49,2019-09-26 20:33:49,0.000s,PASSED
resultt = slurpert.parseText(responsen.getResponseText()),,,,2019-09-26 20:33:49,2019-09-26 20:33:49,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:49,2019-09-26 20:33:49,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM HOLIDAY MASTER TEST CASE = "" + resultt)",,,,2019-09-26 20:33:49,2019-09-26 20:33:49,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:49,2019-09-26 20:33:49,0.001s,PASSED
,,,,,,,
Test Cases/oRefrenceMaster_Test,,,,2019-09-26 20:33:49,2019-09-26 20:33:51,2.542s,FAILED
"responseo = sendRequestAndVerify(findTestObject(""oRefrence Master"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 20:33:49,2019-09-26 20:33:51,2.112s,FAILED
,,,,,,,
Test Cases/pLobByUser_Test,,,,2019-09-26 20:33:51,2019-09-26 20:33:52,0.709s,PASSED
"responsep = sendRequestAndVerify(findTestObject(""pLob By User"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 20:33:51,2019-09-26 20:33:52,0.493s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:33:52,2019-09-26 20:33:52,0.000s,PASSED
resultt = slurpert.parseText(responsep.getResponseText()),,,,2019-09-26 20:33:52,2019-09-26 20:33:52,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:52,2019-09-26 20:33:52,0.002s,PASSED
"println(""THIS IS THE RESPONSE FROM LOB BY USER TEST CASE = "" + resultt)",,,,2019-09-26 20:33:52,2019-09-26 20:33:52,0.010s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:33:52,2019-09-26 20:33:52,0.000s,PASSED
,,,,,,,
Test Cases/qActivityHistory_Test,,,,2019-09-26 20:33:52,2019-09-26 20:34:07,15.472s,PASSED
"responseq = sendRequestAndVerify(findTestObject(""qActivity History"", [""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:33:52,2019-09-26 20:34:07,15.188s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:34:07,2019-09-26 20:34:07,0.001s,PASSED
resultt = slurpert.parseText(responseq.getResponseText()),,,,2019-09-26 20:34:07,2019-09-26 20:34:07,0.006s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:07,2019-09-26 20:34:07,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM ACTIVITY HISTORY TEST CASE = "" + resultt)",,,,2019-09-26 20:34:07,2019-09-26 20:34:07,0.038s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:07,2019-09-26 20:34:07,0.000s,PASSED
,,,,,,,
Test Cases/RoleAccessUser_Test,,,,2019-09-26 20:34:07,2019-09-26 20:34:10,2.171s,PASSED
"sendRequestAndVerify(findTestObject(""Role Access By User"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 20:34:08,2019-09-26 20:34:08,0.673s,PASSED
"responseR = sendRequestAndVerify(findTestObject(""Role Access By User""))",,,,2019-09-26 20:34:08,2019-09-26 20:34:09,0.587s,PASSED
slurperR = new groovy.json.JsonSlurper(),,,,2019-09-26 20:34:09,2019-09-26 20:34:09,0.001s,PASSED
resultR = slurperR.parseText(responseR.getResponseText()),,,,2019-09-26 20:34:09,2019-09-26 20:34:09,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:09,2019-09-26 20:34:09,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM ROLE ACESS USER  TEST CASE = "" + resultR)",,,,2019-09-26 20:34:09,2019-09-26 20:34:09,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:09,2019-09-26 20:34:09,0.000s,PASSED
valueR = roleId,,,,2019-09-26 20:34:09,2019-09-26 20:34:09,0.001s,PASSED
loGID = valueR,,,,2019-09-26 20:34:09,2019-09-26 20:34:09,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:09,2019-09-26 20:34:09,0.000s,PASSED
"println(""THE USER LOG ID IS   = "" + loGID)",,,,2019-09-26 20:34:09,2019-09-26 20:34:09,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:09,2019-09-26 20:34:09,0.001s,PASSED
,,,,,,,
Test Cases/sIncidentHistory_Test,,,,2019-09-26 20:34:10,2019-09-26 20:34:12,2.788s,PASSED
"sendRequestAndVerify(findTestObject(""sIncident History"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 20:34:10,2019-09-26 20:34:11,1.222s,PASSED
"responses = sendRequestAndVerify(findTestObject(""sIncident History"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 20:34:11,2019-09-26 20:34:12,1.351s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:34:12,2019-09-26 20:34:12,0.000s,PASSED
resultt = slurpert.parseText(responses.getResponseText()),,,,2019-09-26 20:34:12,2019-09-26 20:34:12,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:12,2019-09-26 20:34:12,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM INCIDENT HISTORY TEST CASE = "" + resultt)",,,,2019-09-26 20:34:12,2019-09-26 20:34:12,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:12,2019-09-26 20:34:12,0.000s,PASSED
,,,,,,,
Test Cases/tMergeContactDetail_Test,,,,2019-09-26 20:34:12,2019-09-26 20:34:14,1.073s,PASSED
"sendRequest(findTestObject(""tMerge Contact Detail"", [""countryID"":countryID, ""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 20:34:13,2019-09-26 20:34:13,0.410s,PASSED
"responset = sendRequestAndVerify(findTestObject(""tMerge Contact Detail"", [""countryID"":countryID, ""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 20:34:13,2019-09-26 20:34:14,0.460s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 20:34:14,2019-09-26 20:34:14,0.000s,PASSED
resultt = slurpert.parseText(responset.getResponseText()),,,,2019-09-26 20:34:14,2019-09-26 20:34:14,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:14,2019-09-26 20:34:14,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM MERGE CONTACT DETAILS TEST CASE = "" + resultt)",,,,2019-09-26 20:34:14,2019-09-26 20:34:14,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:14,2019-09-26 20:34:14,0.000s,PASSED
,,,,,,,
Test Cases/vInsertIncident_Test,,,,2019-09-26 20:34:14,2019-09-26 20:34:15,1.910s,PASSED
"incidenTID = toUpperCase().replace(""-"", """")",,,,2019-09-26 20:34:14,2019-09-26 20:34:14,0.000s,PASSED
println(incidenTID),,,,2019-09-26 20:34:14,2019-09-26 20:34:14,0.000s,PASSED
now = new java.util.Date(),,,,2019-09-26 20:34:14,2019-09-26 20:34:14,0.000s,PASSED
"incidenTDate = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:14,2019-09-26 20:34:14,0.000s,PASSED
println(incidenTDate),,,,2019-09-26 20:34:14,2019-09-26 20:34:14,0.000s,PASSED
"sendRequest(findTestObject(""uInsert Incident"", [""userId"":userid, ""uniqueToken"":uniquetoken, ""incidentID"":incidenTID, ""incidentDate"":incidenTDate, ""checkInLocality"":checkInLocality, ... ]))",,,,2019-09-26 20:34:14,2019-09-26 20:34:14,0.214s,PASSED
"responsev = sendRequestAndVerify(findTestObject(""uInsert Incident"", [""userId"":userid, ""uniqueToken"":uniquetoken, ""incidentID"":incidenTID, ""incidentDate"":incidenTDate, ""checkInLocality"":checkInLocality, ... ]))",,,,2019-09-26 20:34:14,2019-09-26 20:34:14,0.551s,PASSED
slurperv = new groovy.json.JsonSlurper(),,,,2019-09-26 20:34:15,2019-09-26 20:34:15,0.010s,PASSED
resultv = slurperv.parseText(responsev.getResponseText()),,,,2019-09-26 20:34:15,2019-09-26 20:34:15,0.617s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:15,2019-09-26 20:34:15,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM ISERT INCIDENT TEST CASE = "" + resultv)",,,,2019-09-26 20:34:15,2019-09-26 20:34:15,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:15,2019-09-26 20:34:15,0.000s,PASSED
,,,,,,,
Test Cases/xDasboard_Test,,,,2019-09-26 20:34:15,2019-09-26 20:34:16,1.053s,PASSED
now = new java.util.Date(),,,,2019-09-26 20:34:16,2019-09-26 20:34:16,0.000s,PASSED
"fromDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:16,2019-09-26 20:34:16,0.000s,PASSED
println(fromDatE),,,,2019-09-26 20:34:16,2019-09-26 20:34:16,0.000s,PASSED
"toDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:16,2019-09-26 20:34:16,0.000s,PASSED
println(toDatE),,,,2019-09-26 20:34:16,2019-09-26 20:34:16,0.000s,PASSED
"sendRequest(findTestObject(""xDashboard"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 20:34:16,2019-09-26 20:34:16,0.265s,PASSED
"responsex = sendRequestAndVerify(findTestObject(""xDashboard"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 20:34:16,2019-09-26 20:34:16,0.543s,PASSED
slurperx = new groovy.json.JsonSlurper(),,,,2019-09-26 20:34:16,2019-09-26 20:34:16,0.000s,PASSED
resultx = slurperx.parseText(responsex.getResponseText()),,,,2019-09-26 20:34:16,2019-09-26 20:34:16,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:16,2019-09-26 20:34:16,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM DASBOARD TEST CASE = "" + resultx)",,,,2019-09-26 20:34:16,2019-09-26 20:34:16,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:16,2019-09-26 20:34:16,0.000s,PASSED
,,,,,,,
Test Cases/wDiseaseMaster_Test,,,,2019-09-26 20:34:16,2019-09-26 20:34:18,1.815s,PASSED
"sendRequest(findTestObject(""wDisease Master"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""versionTableId"":versionTableId]))",,,,2019-09-26 20:34:17,2019-09-26 20:34:17,0.772s,PASSED
"responsew = sendRequestAndVerify(findTestObject(""wDisease Master"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""versionTableId"":versionTableId]))",,,,2019-09-26 20:34:17,2019-09-26 20:34:18,0.416s,PASSED
slurperw = new groovy.json.JsonSlurper(),,,,2019-09-26 20:34:18,2019-09-26 20:34:18,0.000s,PASSED
resultw = slurperw.parseText(responsew.getResponseText()),,,,2019-09-26 20:34:18,2019-09-26 20:34:18,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:18,2019-09-26 20:34:18,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM DISEASE MASTER  TEST CASE = "" + resultw)",,,,2019-09-26 20:34:18,2019-09-26 20:34:18,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:18,2019-09-26 20:34:18,0.000s,PASSED
,,,,,,,
Test Cases/zMobileAppVersion_Test,,,,2019-09-26 20:34:18,2019-09-26 20:34:21,2.534s,PASSED
"sendRequest(findTestObject(""y1Mobile App Version"", [""uniqueToken"":uniquetoken, ""oparatingSystem"":oparatingSystem, ""versionNumber"":versionNumber]))",,,,2019-09-26 20:34:19,2019-09-26 20:34:19,0.636s,PASSED
"responsez = sendRequestAndVerify(findTestObject(""y1Mobile App Version"", [""uniqueToken"":uniquetoken, ""oparatingSystem"":oparatingSystem, ""versionNumber"":versionNumber]))",,,,2019-09-26 20:34:19,2019-09-26 20:34:20,0.390s,PASSED
slurperz = new groovy.json.JsonSlurper(),,,,2019-09-26 20:34:20,2019-09-26 20:34:20,0.000s,PASSED
resultz = slurperz.parseText(responsez.getResponseText()),,,,2019-09-26 20:34:20,2019-09-26 20:34:20,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:20,2019-09-26 20:34:20,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM MOBILE APP VERSION TEST CASE = "" + resultz)",,,,2019-09-26 20:34:20,2019-09-26 20:34:20,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:20,2019-09-26 20:34:20,0.000s,PASSED
CtID = toString().toUpperCase(),,,,2019-09-26 20:34:20,2019-09-26 20:34:20,0.000s,PASSED
f = new java.io.File(D:\SmartDoxApiResponse\CtID.txt),,,,2019-09-26 20:34:20,2019-09-26 20:34:20,0.000s,PASSED
f.write(CtID),,,,2019-09-26 20:34:20,2019-09-26 20:34:20,0.000s,PASSED
now = new java.util.Date(),,,,2019-09-26 20:34:20,2019-09-26 20:34:20,0.000s,PASSED
"CreatedDate = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:20,2019-09-26 20:34:20,0.000s,PASSED
f = new java.io.File(D:\SmartDoxApiResponse\CreatedDate.txt),,,,2019-09-26 20:34:20,2019-09-26 20:34:21,0.791s,PASSED
f.write(CreatedDate),,,,2019-09-26 20:34:21,2019-09-26 20:34:21,0.000s,PASSED
now1 = new java.util.Date(),,,,2019-09-26 20:34:21,2019-09-26 20:34:21,0.000s,PASSED
"SubmitedDate = now1.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:21,2019-09-26 20:34:21,0.000s,PASSED
f = new java.io.File(D:\SmartDoxApiResponse\SubmitedDate.txt),,,,2019-09-26 20:34:21,2019-09-26 20:34:21,0.000s,PASSED
f.write(SubmitedDate),,,,2019-09-26 20:34:21,2019-09-26 20:34:21,0.000s,PASSED
,,,,,,,
Test Cases/zActivityCategory_Test,,,,2019-09-26 20:34:21,2019-09-26 20:34:23,1.693s,PASSED
"sendRequest(findTestObject(""y2Activity Category"", [""versiontableID"":versiontableID, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:34:21,2019-09-26 20:34:21,0.225s,PASSED
"responsez1 = sendRequestAndVerify(findTestObject(""y2Activity Category"", [""versiontableID"":versiontableID, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 20:34:21,2019-09-26 20:34:22,0.962s,PASSED
slurperz1 = new groovy.json.JsonSlurper(),,,,2019-09-26 20:34:22,2019-09-26 20:34:22,0.000s,PASSED
resultz1 = slurperz1.parseText(responsez1.getResponseText()),,,,2019-09-26 20:34:22,2019-09-26 20:34:23,0.301s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:23,2019-09-26 20:34:23,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM ACTIVITY CATEGORY TEST CASE = "" + resultz1)",,,,2019-09-26 20:34:23,2019-09-26 20:34:23,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:23,2019-09-26 20:34:23,0.000s,PASSED
,,,,,,,
Test Cases/z1SupervisiorTeamStatus_Test,,,,2019-09-26 20:34:23,2019-09-26 20:34:25,2.132s,PASSED
dte = new java.util.Date(),,,,2019-09-26 20:34:23,2019-09-26 20:34:23,0.000s,PASSED
"fromDatE = dte.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:23,2019-09-26 20:34:23,0.000s,PASSED
println(fromDatE),,,,2019-09-26 20:34:23,2019-09-26 20:34:23,0.000s,PASSED
bte = new java.util.Date(),,,,2019-09-26 20:34:23,2019-09-26 20:34:23,0.000s,PASSED
"toDatE = bte.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:23,2019-09-26 20:34:23,0.000s,PASSED
println(toDatE),,,,2019-09-26 20:34:23,2019-09-26 20:34:23,0.000s,PASSED
"sendRequest(findTestObject(""ySupervisior Team Status"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 20:34:23,2019-09-26 20:34:24,0.336s,PASSED
"responsez1 = sendRequestAndVerify(findTestObject(""ySupervisior Team Status"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 20:34:24,2019-09-26 20:34:25,0.995s,PASSED
slurperz1 = new groovy.json.JsonSlurper(),,,,2019-09-26 20:34:25,2019-09-26 20:34:25,0.000s,PASSED
resultz1 = slurperz1.parseText(responsez1.getResponseText()),,,,2019-09-26 20:34:25,2019-09-26 20:34:25,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:25,2019-09-26 20:34:25,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM SUPERVISIOR TEAM STATUS TEST CASE = "" + resultz1)",,,,2019-09-26 20:34:25,2019-09-26 20:34:25,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:25,2019-09-26 20:34:25,0.000s,PASSED
,,,,,,,
Test Cases/z2Supervisior Users,,,,2019-09-26 20:34:25,2019-09-26 20:34:28,3.116s,PASSED
ddt = new java.util.Date(),,,,2019-09-26 20:34:25,2019-09-26 20:34:25,0.557s,PASSED
"fromDatE = ddt.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:25,2019-09-26 20:34:25,0.000s,PASSED
println(fromDatE),,,,2019-09-26 20:34:25,2019-09-26 20:34:25,0.000s,PASSED
btd = new java.util.Date(),,,,2019-09-26 20:34:25,2019-09-26 20:34:25,0.000s,PASSED
"toDatE = btd.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:25,2019-09-26 20:34:25,0.000s,PASSED
println(toDatE),,,,2019-09-26 20:34:25,2019-09-26 20:34:25,0.000s,PASSED
"sendRequest(findTestObject(""y3Supervisior Users"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 20:34:25,2019-09-26 20:34:26,0.193s,PASSED
"responsez2 = sendRequestAndVerify(findTestObject(""y3Supervisior Users"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 20:34:26,2019-09-26 20:34:27,0.913s,PASSED
slurperz2 = new groovy.json.JsonSlurper(),,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.000s,PASSED
resultz2 = slurperz2.parseText(responsez2.getResponseText()),,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM SUPERVISIOR USERS TEST CASE = "" + resultz2)",,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.555s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.000s,PASSED
ctID = toString().toUpperCase(),,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.010s,PASSED
println(ctID),,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.000s,PASSED
f = new java.io.File(D:\SmartDoxApiResponse\CtID.txt),,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.000s,PASSED
f.write(ctID),,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.000s,PASSED
now = new java.util.Date(),,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.000s,PASSED
"createdDaTE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.000s,PASSED
f1 = new java.io.File(D:\SmartDoxApiResponse\CreatedDate.txt),,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.000s,PASSED
f1.write(createdDaTE),,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.000s,PASSED
now1 = new java.util.Date(),,,,2019-09-26 20:34:27,2019-09-26 20:34:27,0.000s,PASSED
"submittedDaTE = now1.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:28,2019-09-26 20:34:28,0.000s,PASSED
f2 = new java.io.File(D:\SmartDoxApiResponse\SubmitedDate.txt),,,,2019-09-26 20:34:28,2019-09-26 20:34:28,0.000s,PASSED
f2.write(submittedDaTE),,,,2019-09-26 20:34:28,2019-09-26 20:34:28,0.000s,PASSED
,,,,,,,
Test Cases/x1TargetBreakDown_Test,,,,2019-09-26 20:34:28,2019-09-26 20:34:30,1.771s,PASSED
now = new java.util.Date(),,,,2019-09-26 20:34:28,2019-09-26 20:34:28,0.000s,PASSED
"fromDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:28,2019-09-26 20:34:28,0.000s,PASSED
println(fromDatE),,,,2019-09-26 20:34:28,2019-09-26 20:34:28,0.000s,PASSED
"toDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 20:34:28,2019-09-26 20:34:28,0.000s,PASSED
println(toDatE),,,,2019-09-26 20:34:28,2019-09-26 20:34:28,0.000s,PASSED
"sendRequest(findTestObject(""x1Target Break Down"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 20:34:29,2019-09-26 20:34:29,0.455s,PASSED
"responsex1 = sendRequestAndVerify(findTestObject(""x1Target Break Down"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 20:34:29,2019-09-26 20:34:30,0.496s,PASSED
slurperx1 = new groovy.json.JsonSlurper(),,,,2019-09-26 20:34:30,2019-09-26 20:34:30,0.000s,PASSED
resultx1 = slurperx1.parseText(responsex1.getResponseText()),,,,2019-09-26 20:34:30,2019-09-26 20:34:30,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:30,2019-09-26 20:34:30,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM TARGET BREAKDOWN TEST CASE = "" + resultx1)",,,,2019-09-26 20:34:30,2019-09-26 20:34:30,0.010s,PASSED
"println(""***************************************"")",,,,2019-09-26 20:34:30,2019-09-26 20:34:30,0.000s,PASSED
