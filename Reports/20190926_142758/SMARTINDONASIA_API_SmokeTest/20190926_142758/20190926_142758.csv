Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
SMARTINDONASIA_API_SmokeTest,,,,2019-09-26 14:29:20,2019-09-26 14:31:06,1m - 46.330s,INCOMPLETE
,,,,,,,
Test Cases/a.ValidateMobileNumber_Test,,,,2019-09-26 14:29:21,2019-09-26 14:29:41,20.290s,PASSED
"sendRequest(findTestObject(""aValidate Mobile Number"", [""protocal"":Endpoint]))",,,,2019-09-26 14:29:22,2019-09-26 14:29:39,16.488s,PASSED
"response = sendRequestAndVerify(findTestObject(""aValidate Mobile Number"", [""protocal"":Endpoint]))",,,,2019-09-26 14:29:39,2019-09-26 14:29:41,2.522s,PASSED
slurper = new groovy.json.JsonSlurper(),,,,2019-09-26 14:29:41,2019-09-26 14:29:41,0.014s,PASSED
result = slurper.parseText(response.getResponseText()),,,,2019-09-26 14:29:41,2019-09-26 14:29:41,0.034s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:29:41,2019-09-26 14:29:41,0.010s,PASSED
"println(""THIS IS THE RESPONSE FROM VALIDATEMOBILENUMBER TEST CASE = "" + result)",,,,2019-09-26 14:29:41,2019-09-26 14:29:41,0.069s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:29:41,2019-09-26 14:29:41,0.002s,PASSED
value = uniqueTokenCode,,,,2019-09-26 14:29:41,2019-09-26 14:29:41,0.010s,PASSED
println(value),,,,2019-09-26 14:29:41,2019-09-26 14:29:41,0.010s,PASSED
uniquetoken = value,,,,2019-09-26 14:29:41,2019-09-26 14:29:41,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:29:41,2019-09-26 14:29:41,0.005s,PASSED
"println(""UNIQ TOKEN ID IS GENARATED  = "" + uniquetoken)",,,,2019-09-26 14:29:41,2019-09-26 14:29:41,0.002s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:29:41,2019-09-26 14:29:41,0.001s,PASSED
,,,,,,,
Test Cases/aValidate_OTPTest,,,,2019-09-26 14:29:41,2019-09-26 14:29:43,1.627s,PASSED
"sendRequest(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 14:29:42,2019-09-26 14:29:43,0.847s,PASSED
"response1 = sendRequest(findTestObject(""aValidate Mobile Number""))",,,,2019-09-26 14:29:43,2019-09-26 14:29:43,0.392s,PASSED
slurper1 = new groovy.json.JsonSlurper(),,,,2019-09-26 14:29:43,2019-09-26 14:29:43,0.000s,PASSED
result1 = slurper1.parseText(responseBodyContent),,,,2019-09-26 14:29:43,2019-09-26 14:29:43,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:29:43,2019-09-26 14:29:43,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM VALIDATEOTP TEST CASE = "" + result1)",,,,2019-09-26 14:29:43,2019-09-26 14:29:43,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:29:43,2019-09-26 14:29:43,0.000s,PASSED
value1 = userId,,,,2019-09-26 14:29:43,2019-09-26 14:29:43,0.010s,PASSED
userid = value1,,,,2019-09-26 14:29:43,2019-09-26 14:29:43,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:29:43,2019-09-26 14:29:43,0.000s,PASSED
"println(""THE USER ID IS GENARATED  = "" + userid)",,,,2019-09-26 14:29:43,2019-09-26 14:29:43,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:29:43,2019-09-26 14:29:43,0.000s,PASSED
,,,,,,,
Test Cases/bInsertUser_CheckInTest,,,,2019-09-26 14:29:43,2019-09-26 14:29:44,1.373s,PASSED
chkInID = toString().toUpperCase(),,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.010s,PASSED
println(chkInID),,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.000s,PASSED
f = new java.io.File(D:\SmartDoxApiResponse\CtID.txt),,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.000s,PASSED
f.write(chkInID),,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.288s,PASSED
now = new java.util.Date(),,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.149s,PASSED
"chkInTime = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.084s,PASSED
println(chkInTime),,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.010s,PASSED
"resp3 = sendRequest(findTestObject(""bInsert User CheckIn"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""checkInTime"":chkInTime, ""checkInID"":chkInID, ""checkinLocality"":checkinLocality]))",,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.365s,PASSED
slurper3 = new groovy.json.JsonSlurper(),,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.000s,PASSED
result3 = slurper3.parseText(resp3.getResponseText()),,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.000s,PASSED
"println(""***************************************
"")",,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM USER_CHECKIN TEST CASE = "" + result3)",,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.000s,PASSED
"println(""***************************************
"")",,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.000s,PASSED
"toString().split(chkInID, 0)",,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.042s,PASSED
"value3 = toString().substring(11, 47)",,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.000s,PASSED
println(value3),,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.000s,PASSED
"println(""THE CHECKIN  iD IS   = "" + value3)",,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.000s,PASSED
f = new java.io.File(D:\Checkin_ID.txt),,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.000s,PASSED
f.write(value3),,,,2019-09-26 14:29:44,2019-09-26 14:29:44,0.010s,PASSED
,,,,,,,
Test Cases/bUpdateUser_CheckInTest,,,,2019-09-26 14:29:45,2019-09-26 14:29:46,1.614s,PASSED
file3 = new java.io.File(D:\Checkin_ID.txt),,,,2019-09-26 14:29:45,2019-09-26 14:29:45,0.000s,PASSED
checkinID = file3.readLines(),,,,2019-09-26 14:29:45,2019-09-26 14:29:45,0.041s,PASSED
"println(""-------------->"" + checkinID)",,,,2019-09-26 14:29:45,2019-09-26 14:29:45,0.000s,PASSED
now1 = new java.util.Date(),,,,2019-09-26 14:29:45,2019-09-26 14:29:45,0.000s,PASSED
"chkOutTime = now1.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 14:29:45,2019-09-26 14:29:45,0.000s,PASSED
println(chkOutTime),,,,2019-09-26 14:29:45,2019-09-26 14:29:45,0.000s,PASSED
"resp4 = sendRequest(findTestObject(""bUpdate User CheckIn"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""checkinID"":checkinID, ""checkedOutTime"":chkOutTime]))",,,,2019-09-26 14:29:45,2019-09-26 14:29:46,1.224s,PASSED
,,,,,,,
Test Cases/cInsertTripDetails_Test,,,,2019-09-26 14:29:46,2019-09-26 14:29:48,1.976s,PASSED
"sendRequestAndVerify(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 14:29:47,2019-09-26 14:29:48,0.966s,PASSED
triPID = toString().toUpperCase(),,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.001s,PASSED
println(triPID),,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.001s,PASSED
now = new java.util.Date(),,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.002s,PASSED
"tiMe = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.002s,PASSED
println(tiMe),,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.000s,PASSED
"resp2 = sendRequest(findTestObject(""cInsert Trip Detail"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""tripid"":triPID, ""startriptime"":tiMe, ""startripLocality"":startripLocality]))",,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.564s,PASSED
slurper2 = new groovy.json.JsonSlurper(),,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.000s,PASSED
result2 = slurper2.parseText(resp2.getResponseText()),,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.000s,PASSED
"println(""***************************************
"")",,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM INSERT TRIP DETAILS  TEST CASE = "" + result2)",,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.000s,PASSED
"println(""***************************************
"")",,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.000s,PASSED
"toString().split(triPID, 0)",,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.000s,PASSED
"value2 = toString().substring(25, 61)",,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.001s,PASSED
println(value2),,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.000s,PASSED
"println(""THE TRIP iD IS   = "" + value2)",,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.000s,PASSED
f = new java.io.File(D:\InsertTripDetails_ID.txt),,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.000s,PASSED
f.write(value2),,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.004s,PASSED
,,,,,,,
Test Cases/cUpdateTripDetails_Test,,,,2019-09-26 14:29:48,2019-09-26 14:29:51,2.439s,PASSED
file1 = new java.io.File(D:\InsertTripDetails_ID.txt),,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.001s,PASSED
triPID = file1.readLines(),,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.002s,PASSED
"println(""-------------->"" + triPID)",,,,2019-09-26 14:29:48,2019-09-26 14:29:48,0.001s,PASSED
"sendRequest(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 14:29:48,2019-09-26 14:29:50,1.783s,PASSED
"sendRequest(findTestObject(""cUpdate Trip Detail"", [""uptripiD"":triPID, ""userId"":userid]))",,,,2019-09-26 14:29:50,2019-09-26 14:29:51,0.320s,PASSED
,,,,,,,
Test Cases/d.VersionMaster_Test,,,,2019-09-26 14:29:51,2019-09-26 14:29:51,0.909s,PASSED
"sendRequestAndVerify(findTestObject(""d.Version Master"", [""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:29:51,2019-09-26 14:29:51,0.646s,PASSED
,,,,,,,
Test Cases/dLeaveType_Test,,,,2019-09-26 14:29:51,2019-09-26 14:29:53,1.215s,PASSED
"sendRequestAndVerify(findTestObject(""eLeave Type"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:29:52,2019-09-26 14:29:53,0.933s,PASSED
,,,,,,,
Test Cases/eLeaveApplication_Test,,,,2019-09-26 14:29:53,2019-09-26 14:29:54,1.170s,PASSED
"sendRequestAndVerify(findTestObject(""eLeave Application"", [""leavetypeId"":leavetypeId, ""fromdaTe"":fromdaTe, ""todaTe"":todaTe, ""commenTs"":commenTs, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:29:53,2019-09-26 14:29:54,0.903s,PASSED
,,,,,,,
Test Cases/eLeaveCancelApplicationTest,,,,2019-09-26 14:29:54,2019-09-26 14:29:55,1.137s,PASSED
"sendRequestAndVerify(findTestObject(""eLeave Cancel Application"", [""userId"":userid, ""uniqueToken"":uniquetoken, ""fromdaTe"":fromdaTe, ""todaTe"":todaTe]))",,,,2019-09-26 14:29:55,2019-09-26 14:29:55,0.746s,PASSED
,,,,,,,
Test Cases/gCropMasterTest,,,,2019-09-26 14:29:55,2019-09-26 14:29:56,1.173s,PASSED
"sendRequestAndVerify(findTestObject(""gCrop-Master"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:29:56,2019-09-26 14:29:56,0.942s,PASSED
,,,,,,,
Test Cases/hProductMaster_Test,,,,2019-09-26 14:29:56,2019-09-26 14:29:58,1.386s,PASSED
"sendRequestAndVerify(findTestObject(""iUser_Crop_Product"", [""versiontableId"":"""", ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:29:57,2019-09-26 14:29:58,1.086s,PASSED
,,,,,,,
Test Cases/iUserCropProduct_Test,,,,2019-09-26 14:29:58,2019-09-26 14:29:59,0.931s,PASSED
"sendRequestAndVerify(findTestObject(""iUser_Crop_Product"", [""versiontableId"":"""", ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:29:58,2019-09-26 14:29:59,0.671s,PASSED
,,,,,,,
Test Cases/jUserGeographyDetails_Test,,,,2019-09-26 14:29:59,2019-09-26 14:30:00,1.218s,PASSED
"sendRequestAndVerify(findTestObject(""jUser Geography Details"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:29:59,2019-09-26 14:30:00,0.920s,PASSED
,,,,,,,
Test Cases/kUserTimeline_Test,,,,2019-09-26 14:30:00,2019-09-26 14:30:08,7.459s,PASSED
"sendRequestAndVerify(findTestObject(""kUserTimeline"", [""fromdaTe"":fromdaTe, ""todaTe"":todaTe, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:30:00,2019-09-26 14:30:08,7.127s,PASSED
,,,,,,,
Test Cases/lSeverityMaster_Test,,,,2019-09-26 14:30:08,2019-09-26 14:30:10,2.193s,PASSED
"sendRequestAndVerify(findTestObject(""lSeverity Master"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:30:08,2019-09-26 14:30:10,1.894s,PASSED
,,,,,,,
Test Cases/mQuestionAnswerMaster_Test,,,,2019-09-26 14:30:10,2019-09-26 14:30:12,1.612s,PASSED
"sendRequestAndVerify(findTestObject(""mQuestion Answer Master"", [""lobID"":lobID, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:30:10,2019-09-26 14:30:12,1.244s,PASSED
,,,,,,,
Test Cases/nHolidayMaster_Test,,,,2019-09-26 14:30:12,2019-09-26 14:30:14,2.163s,PASSED
"sendRequestAndVerify(findTestObject(""nHoliday Master"", [""versiontableId"":versiontableId, ""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 14:30:12,2019-09-26 14:30:14,1.740s,PASSED
,,,,,,,
Test Cases/oRefrenceMaster_Test,,,,2019-09-26 14:30:14,2019-09-26 14:30:16,2.048s,FAILED
"sendRequestAndVerify(findTestObject(""oRefrence Master"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 14:30:15,2019-09-26 14:30:16,1.601s,FAILED
,,,,,,,
Test Cases/pLobByUser_Test,,,,2019-09-26 14:30:16,2019-09-26 14:30:18,1.562s,PASSED
"sendRequestAndVerify(findTestObject(""pLob By User"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 14:30:17,2019-09-26 14:30:18,0.685s,PASSED
,,,,,,,
Test Cases/qActivityHistory_Test,,,,2019-09-26 14:30:18,2019-09-26 14:30:40,22.044s,PASSED
"sendRequestAndVerify(findTestObject(""qActivity History"", [""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:30:18,2019-09-26 14:30:40,21.748s,PASSED
,,,,,,,
Test Cases/RoleAccessUser_Test,,,,2019-09-26 14:30:40,2019-09-26 14:30:42,1.701s,PASSED
"sendRequestAndVerify(findTestObject(""Role Access By User"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 14:30:40,2019-09-26 14:30:41,0.877s,PASSED
"responseR = sendRequestAndVerify(findTestObject(""Role Access By User""))",,,,2019-09-26 14:30:41,2019-09-26 14:30:42,0.576s,PASSED
slurperR = new groovy.json.JsonSlurper(),,,,2019-09-26 14:30:42,2019-09-26 14:30:42,0.000s,PASSED
resultR = slurperR.parseText(responseR.getResponseText()),,,,2019-09-26 14:30:42,2019-09-26 14:30:42,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:42,2019-09-26 14:30:42,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM VALIDATEOTP TEST CASE = "" + resultR)",,,,2019-09-26 14:30:42,2019-09-26 14:30:42,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:42,2019-09-26 14:30:42,0.010s,PASSED
valueR = roleId,,,,2019-09-26 14:30:42,2019-09-26 14:30:42,0.000s,PASSED
loGID = valueR,,,,2019-09-26 14:30:42,2019-09-26 14:30:42,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:42,2019-09-26 14:30:42,0.000s,PASSED
"println(""THE USER LOG ID IS   = "" + loGID)",,,,2019-09-26 14:30:42,2019-09-26 14:30:42,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:42,2019-09-26 14:30:42,0.000s,PASSED
,,,,,,,
Test Cases/sIncidentHistory_Test,,,,2019-09-26 14:30:42,2019-09-26 14:30:44,2.430s,PASSED
"sendRequestAndVerify(findTestObject(""sIncident History"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 14:30:42,2019-09-26 14:30:44,2.114s,PASSED
,,,,,,,
Test Cases/tMergeContactDetail_Test,,,,2019-09-26 14:30:44,2019-09-26 14:30:46,1.695s,PASSED
"sendRequest(findTestObject(""tMerge Contact Detail"", [""countryID"":countryID, ""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 14:30:44,2019-09-26 14:30:45,0.546s,PASSED
"responset = sendRequestAndVerify(findTestObject(""tMerge Contact Detail"", [""countryID"":countryID, ""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-26 14:30:45,2019-09-26 14:30:46,0.861s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-26 14:30:46,2019-09-26 14:30:46,0.000s,PASSED
resultt = slurpert.parseText(responset.getResponseText()),,,,2019-09-26 14:30:46,2019-09-26 14:30:46,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:46,2019-09-26 14:30:46,0.010s,PASSED
"println(""THIS IS THE RESPONSE FROM MERGE CONTACT DETAILS TEST CASE = "" + resultt)",,,,2019-09-26 14:30:46,2019-09-26 14:30:46,0.010s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:46,2019-09-26 14:30:46,0.000s,PASSED
,,,,,,,
Test Cases/vInsertIncident_Test,,,,2019-09-26 14:30:46,2019-09-26 14:30:48,1.844s,PASSED
"incidenTID = toUpperCase().replace(""-"", """")",,,,2019-09-26 14:30:46,2019-09-26 14:30:46,0.000s,PASSED
println(incidenTID),,,,2019-09-26 14:30:46,2019-09-26 14:30:46,0.000s,PASSED
now = new java.util.Date(),,,,2019-09-26 14:30:46,2019-09-26 14:30:46,0.000s,PASSED
"incidenTDate = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 14:30:46,2019-09-26 14:30:46,0.000s,PASSED
println(incidenTDate),,,,2019-09-26 14:30:46,2019-09-26 14:30:46,0.000s,PASSED
"sendRequest(findTestObject(""uInsert Incident"", [""userId"":userid, ""uniqueToken"":uniquetoken, ""incidentID"":incidenTID, ""incidentDate"":incidenTDate, ""checkInLocality"":checkInLocality, ... ]))",,,,2019-09-26 14:30:46,2019-09-26 14:30:47,0.604s,PASSED
"responsev = sendRequestAndVerify(findTestObject(""uInsert Incident"", [""userId"":userid, ""uniqueToken"":uniquetoken, ""incidentID"":incidenTID, ""incidentDate"":incidenTDate, ""checkInLocality"":checkInLocality, ... ]))",,,,2019-09-26 14:30:47,2019-09-26 14:30:48,0.908s,PASSED
slurperv = new groovy.json.JsonSlurper(),,,,2019-09-26 14:30:48,2019-09-26 14:30:48,0.000s,PASSED
resultv = slurperv.parseText(responsev.getResponseText()),,,,2019-09-26 14:30:48,2019-09-26 14:30:48,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:48,2019-09-26 14:30:48,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM ISERT INCIDENT TEST CASE = "" + resultv)",,,,2019-09-26 14:30:48,2019-09-26 14:30:48,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:48,2019-09-26 14:30:48,0.000s,PASSED
,,,,,,,
Test Cases/xDasboard_Test,,,,2019-09-26 14:30:48,2019-09-26 14:30:49,1.169s,PASSED
now = new java.util.Date(),,,,2019-09-26 14:30:48,2019-09-26 14:30:48,0.000s,PASSED
"fromDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 14:30:48,2019-09-26 14:30:48,0.000s,PASSED
println(fromDatE),,,,2019-09-26 14:30:48,2019-09-26 14:30:48,0.000s,PASSED
"toDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 14:30:48,2019-09-26 14:30:48,0.000s,PASSED
println(toDatE),,,,2019-09-26 14:30:48,2019-09-26 14:30:48,0.000s,PASSED
"sendRequest(findTestObject(""xDashboard"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 14:30:48,2019-09-26 14:30:48,0.296s,PASSED
"responsex = sendRequestAndVerify(findTestObject(""xDashboard"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 14:30:48,2019-09-26 14:30:49,0.599s,PASSED
slurperx = new groovy.json.JsonSlurper(),,,,2019-09-26 14:30:49,2019-09-26 14:30:49,0.000s,PASSED
resultx = slurperx.parseText(responsex.getResponseText()),,,,2019-09-26 14:30:49,2019-09-26 14:30:49,0.010s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:49,2019-09-26 14:30:49,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM DASBOARD TEST CASE = "" + resultx)",,,,2019-09-26 14:30:49,2019-09-26 14:30:49,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:49,2019-09-26 14:30:49,0.000s,PASSED
,,,,,,,
Test Cases/wDiseaseMaster_Test,,,,2019-09-26 14:30:49,2019-09-26 14:30:51,2.403s,PASSED
"sendRequest(findTestObject(""wDisease Master"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""versionTableId"":versionTableId]))",,,,2019-09-26 14:30:49,2019-09-26 14:30:50,0.761s,PASSED
"responsew = sendRequestAndVerify(findTestObject(""wDisease Master"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""versionTableId"":versionTableId]))",,,,2019-09-26 14:30:50,2019-09-26 14:30:51,0.988s,PASSED
slurperw = new groovy.json.JsonSlurper(),,,,2019-09-26 14:30:51,2019-09-26 14:30:51,0.000s,PASSED
resultw = slurperw.parseText(responsew.getResponseText()),,,,2019-09-26 14:30:51,2019-09-26 14:30:51,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:51,2019-09-26 14:30:51,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM DISEASE MASTER  TEST CASE = "" + resultw)",,,,2019-09-26 14:30:51,2019-09-26 14:30:51,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:51,2019-09-26 14:30:51,0.000s,PASSED
,,,,,,,
Test Cases/zMobileAppVersion_Test,,,,2019-09-26 14:30:51,2019-09-26 14:30:55,3.406s,PASSED
"sendRequest(findTestObject(""y1Mobile App Version"", [""uniqueToken"":uniquetoken, ""oparatingSystem"":oparatingSystem, ""versionNumber"":versionNumber]))",,,,2019-09-26 14:30:52,2019-09-26 14:30:53,0.934s,PASSED
"responsez = sendRequestAndVerify(findTestObject(""y1Mobile App Version"", [""uniqueToken"":uniquetoken, ""oparatingSystem"":oparatingSystem, ""versionNumber"":versionNumber]))",,,,2019-09-26 14:30:53,2019-09-26 14:30:53,0.828s,PASSED
slurperz = new groovy.json.JsonSlurper(),,,,2019-09-26 14:30:53,2019-09-26 14:30:53,0.001s,PASSED
resultz = slurperz.parseText(responsez.getResponseText()),,,,2019-09-26 14:30:53,2019-09-26 14:30:53,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:53,2019-09-26 14:30:53,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM MOBILE APP VERSION TEST CASE = "" + resultz)",,,,2019-09-26 14:30:53,2019-09-26 14:30:53,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:30:53,2019-09-26 14:30:53,0.000s,PASSED
CtID = toString().toUpperCase(),,,,2019-09-26 14:30:53,2019-09-26 14:30:53,0.000s,PASSED
f = new java.io.File(D:\SmartDoxApiResponse\CtID.txt),,,,2019-09-26 14:30:53,2019-09-26 14:30:53,0.001s,PASSED
f.write(CtID),,,,2019-09-26 14:30:53,2019-09-26 14:30:53,0.005s,PASSED
now = new java.util.Date(),,,,2019-09-26 14:30:53,2019-09-26 14:30:53,0.000s,PASSED
"CreatedDate = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 14:30:54,2019-09-26 14:30:54,0.000s,PASSED
f = new java.io.File(D:\SmartDoxApiResponse\CreatedDate.txt),,,,2019-09-26 14:30:54,2019-09-26 14:30:54,0.000s,PASSED
f.write(CreatedDate),,,,2019-09-26 14:30:54,2019-09-26 14:30:54,0.021s,PASSED
now1 = new java.util.Date(),,,,2019-09-26 14:30:54,2019-09-26 14:30:54,0.000s,PASSED
"SubmitedDate = now1.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 14:30:54,2019-09-26 14:30:54,0.000s,PASSED
f = new java.io.File(D:\SmartDoxApiResponse\SubmitedDate.txt),,,,2019-09-26 14:30:54,2019-09-26 14:30:54,0.000s,PASSED
f.write(SubmitedDate),,,,2019-09-26 14:30:54,2019-09-26 14:30:55,0.908s,PASSED
,,,,,,,
Test Cases/zActivityCategory_Test,,,,2019-09-26 14:30:55,2019-09-26 14:31:00,5.930s,PASSED
"sendRequest(findTestObject(""y2Activity Category"", [""versiontableID"":versiontableID, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:30:55,2019-09-26 14:30:58,3.577s,PASSED
"responsez1 = sendRequestAndVerify(findTestObject(""y2Activity Category"", [""versiontableID"":versiontableID, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-26 14:30:58,2019-09-26 14:31:00,2.015s,PASSED
slurperz1 = new groovy.json.JsonSlurper(),,,,2019-09-26 14:31:00,2019-09-26 14:31:00,0.000s,PASSED
resultz1 = slurperz1.parseText(responsez1.getResponseText()),,,,2019-09-26 14:31:00,2019-09-26 14:31:00,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:31:00,2019-09-26 14:31:00,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM ACTIVITY CATEGORY TEST CASE = "" + resultz1)",,,,2019-09-26 14:31:00,2019-09-26 14:31:00,0.011s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:31:00,2019-09-26 14:31:00,0.010s,PASSED
,,,,,,,
Test Cases/z1SupervisiorTeamStatus_Test,,,,2019-09-26 14:31:01,2019-09-26 14:31:04,2.801s,PASSED
now = new java.util.Date(),,,,2019-09-26 14:31:01,2019-09-26 14:31:01,0.000s,PASSED
"fromDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 14:31:01,2019-09-26 14:31:01,0.000s,PASSED
println(fromDatE),,,,2019-09-26 14:31:01,2019-09-26 14:31:01,0.000s,PASSED
"toDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 14:31:01,2019-09-26 14:31:01,0.000s,PASSED
println(toDatE),,,,2019-09-26 14:31:01,2019-09-26 14:31:01,0.000s,PASSED
"sendRequest(findTestObject(""ySupervisior Team Status"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 14:31:01,2019-09-26 14:31:03,1.548s,PASSED
"responsez1 = sendRequestAndVerify(findTestObject(""ySupervisior Team Status"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 14:31:03,2019-09-26 14:31:04,0.971s,PASSED
slurperz1 = new groovy.json.JsonSlurper(),,,,2019-09-26 14:31:04,2019-09-26 14:31:04,0.001s,PASSED
resultz1 = slurperz1.parseText(responsez1.getResponseText()),,,,2019-09-26 14:31:04,2019-09-26 14:31:04,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:31:04,2019-09-26 14:31:04,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM SUPERVISIOR TEAM STATUS TEST CASE = "" + resultz1)",,,,2019-09-26 14:31:04,2019-09-26 14:31:04,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:31:04,2019-09-26 14:31:04,0.001s,PASSED
,,,,,,,
Test Cases/z2Supervisior Users,,,,2019-09-26 14:31:04,2019-09-26 14:31:05,0.530s,ERROR
,,,,,,,
Test Cases/x1TargetBreakDown_Test,,,,2019-09-26 14:31:05,2019-09-26 14:31:06,1.817s,PASSED
now = new java.util.Date(),,,,2019-09-26 14:31:05,2019-09-26 14:31:05,0.000s,PASSED
"fromDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 14:31:05,2019-09-26 14:31:05,0.000s,PASSED
println(fromDatE),,,,2019-09-26 14:31:05,2019-09-26 14:31:05,0.000s,PASSED
"toDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-26 14:31:05,2019-09-26 14:31:05,0.000s,PASSED
println(toDatE),,,,2019-09-26 14:31:05,2019-09-26 14:31:05,0.000s,PASSED
"sendRequest(findTestObject(""x1Target Break Down"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 14:31:05,2019-09-26 14:31:06,0.884s,PASSED
"responsex1 = sendRequestAndVerify(findTestObject(""x1Target Break Down"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-26 14:31:06,2019-09-26 14:31:06,0.630s,PASSED
slurperx1 = new groovy.json.JsonSlurper(),,,,2019-09-26 14:31:06,2019-09-26 14:31:06,0.000s,PASSED
resultx1 = slurperx1.parseText(responsex1.getResponseText()),,,,2019-09-26 14:31:06,2019-09-26 14:31:06,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:31:06,2019-09-26 14:31:06,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM TARGET BREAKDOWN TEST CASE = "" + resultx1)",,,,2019-09-26 14:31:06,2019-09-26 14:31:06,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-26 14:31:06,2019-09-26 14:31:06,0.000s,PASSED
