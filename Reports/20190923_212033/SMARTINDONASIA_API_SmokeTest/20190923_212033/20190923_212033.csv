Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
SMARTINDONASIA_API_SmokeTest,,,,2019-09-23 21:20:36,2019-09-23 21:21:23,46.611s,INCOMPLETE
,,,,,,,
Test Cases/a.ValidateMobileNumber_Test,,,,2019-09-23 21:20:37,2019-09-23 21:20:40,3.577s,PASSED
"sendRequest(findTestObject(""aValidate Mobile Number"", [""protocal"":Endpoint]))",,,,2019-09-23 21:20:37,2019-09-23 21:20:39,1.773s,PASSED
"response = sendRequestAndVerify(findTestObject(""aValidate Mobile Number"", [""protocal"":Endpoint]))",,,,2019-09-23 21:20:39,2019-09-23 21:20:40,1.120s,PASSED
slurper = new groovy.json.JsonSlurper(),,,,2019-09-23 21:20:40,2019-09-23 21:20:40,0.014s,PASSED
result = slurper.parseText(response.getResponseText()),,,,2019-09-23 21:20:40,2019-09-23 21:20:40,0.026s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:20:40,2019-09-23 21:20:40,0.008s,PASSED
"println(""THIS IS THE RESPONSE FROM VALIDATEMOBILENUMBER TEST CASE = "" + result)",,,,2019-09-23 21:20:40,2019-09-23 21:20:40,0.007s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:20:40,2019-09-23 21:20:40,0.002s,PASSED
value = uniqueTokenCode,,,,2019-09-23 21:20:40,2019-09-23 21:20:40,0.018s,PASSED
println(value),,,,2019-09-23 21:20:40,2019-09-23 21:20:40,0.001s,PASSED
uniquetoken = value,,,,2019-09-23 21:20:40,2019-09-23 21:20:40,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:20:40,2019-09-23 21:20:40,0.002s,PASSED
"println(""UNIQ TOKEN ID IS GENARATED  = "" + uniquetoken)",,,,2019-09-23 21:20:40,2019-09-23 21:20:40,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:20:40,2019-09-23 21:20:40,0.001s,PASSED
,,,,,,,
Test Cases/aValidate_OTPTest,,,,2019-09-23 21:20:40,2019-09-23 21:20:41,1.023s,PASSED
"sendRequest(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 21:20:41,2019-09-23 21:20:41,0.421s,PASSED
"response1 = sendRequest(findTestObject(""aValidate Mobile Number""))",,,,2019-09-23 21:20:41,2019-09-23 21:20:41,0.226s,PASSED
slurper1 = new groovy.json.JsonSlurper(),,,,2019-09-23 21:20:41,2019-09-23 21:20:41,0.001s,PASSED
result1 = slurper1.parseText(responseBodyContent),,,,2019-09-23 21:20:41,2019-09-23 21:20:41,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:20:41,2019-09-23 21:20:41,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM VALIDATEOTP TEST CASE = "" + result1)",,,,2019-09-23 21:20:41,2019-09-23 21:20:41,0.002s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:20:41,2019-09-23 21:20:41,0.001s,PASSED
value1 = userId,,,,2019-09-23 21:20:41,2019-09-23 21:20:41,0.001s,PASSED
userid = value1,,,,2019-09-23 21:20:41,2019-09-23 21:20:41,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:20:41,2019-09-23 21:20:41,0.001s,PASSED
"println(""THE USER ID IS GENARATED  = "" + userid)",,,,2019-09-23 21:20:41,2019-09-23 21:20:41,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:20:41,2019-09-23 21:20:41,0.001s,PASSED
,,,,,,,
Test Cases/bInsertUser_CheckInTest,,,,2019-09-23 21:20:41,2019-09-23 21:20:42,0.899s,PASSED
chkInID = toString().toUpperCase(),,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.015s,PASSED
println(chkInID),,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.001s,PASSED
now = new java.util.Date(),,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.008s,PASSED
"chkInTime = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.009s,PASSED
println(chkInTime),,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.006s,PASSED
"resp3 = sendRequest(findTestObject(""bInsert User CheckIn"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""checkInTime"":chkInTime, ""checkInID"":chkInID, ""checkinLocality"":checkinLocality]))",,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.388s,PASSED
slurper3 = new groovy.json.JsonSlurper(),,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.000s,PASSED
result3 = slurper3.parseText(resp3.getResponseText()),,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.001s,PASSED
"println(""***************************************
"")",,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.006s,PASSED
"println(""THIS IS THE RESPONSE FROM USER_CHECKIN TEST CASE = "" + result3)",,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.002s,PASSED
"println(""***************************************
"")",,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.004s,PASSED
"toString().split(chkInID, 0)",,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.010s,PASSED
"value3 = toString().substring(11, 47)",,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.001s,PASSED
println(value3),,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.001s,PASSED
"println(""THE CHECKIN  iD IS   = "" + value3)",,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.002s,PASSED
f = new java.io.File(D:\Checkin_ID.txt),,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.001s,PASSED
f.write(value3),,,,2019-09-23 21:20:42,2019-09-23 21:20:42,0.004s,PASSED
,,,,,,,
Test Cases/bUpdateUser_CheckInTest,,,,2019-09-23 21:20:42,2019-09-23 21:20:43,0.818s,PASSED
file3 = new java.io.File(D:\Checkin_ID.txt),,,,2019-09-23 21:20:43,2019-09-23 21:20:43,0.001s,PASSED
checkinID = file3.readLines(),,,,2019-09-23 21:20:43,2019-09-23 21:20:43,0.009s,PASSED
"println(""-------------->"" + checkinID)",,,,2019-09-23 21:20:43,2019-09-23 21:20:43,0.001s,PASSED
now1 = new java.util.Date(),,,,2019-09-23 21:20:43,2019-09-23 21:20:43,0.000s,PASSED
"chkOutTime = now1.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 21:20:43,2019-09-23 21:20:43,0.001s,PASSED
println(chkOutTime),,,,2019-09-23 21:20:43,2019-09-23 21:20:43,0.001s,PASSED
"resp4 = sendRequest(findTestObject(""bUpdate User CheckIn"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""checkinID"":checkinID, ""checkedOutTime"":chkOutTime]))",,,,2019-09-23 21:20:43,2019-09-23 21:20:43,0.530s,PASSED
,,,,,,,
Test Cases/cInsertTripDetails_Test,,,,2019-09-23 21:20:43,2019-09-23 21:20:44,1.255s,PASSED
"sendRequestAndVerify(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.541s,PASSED
triPID = toString().toUpperCase(),,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.000s,PASSED
println(triPID),,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.000s,PASSED
now = new java.util.Date(),,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.001s,PASSED
"tiMe = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.001s,PASSED
println(tiMe),,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.001s,PASSED
"resp2 = sendRequest(findTestObject(""cInsert Trip Detail"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""tripid"":triPID, ""startriptime"":tiMe, ""startripLocality"":startripLocality]))",,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.309s,PASSED
slurper2 = new groovy.json.JsonSlurper(),,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.001s,PASSED
result2 = slurper2.parseText(resp2.getResponseText()),,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.003s,PASSED
"println(""***************************************
"")",,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM INSERT TRIP DETAILS  TEST CASE = "" + result2)",,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.000s,PASSED
"println(""***************************************
"")",,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.001s,PASSED
"toString().split(triPID, 0)",,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.002s,PASSED
"value2 = toString().substring(25, 61)",,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.005s,PASSED
println(value2),,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.002s,PASSED
"println(""THE TRIP iD IS   = "" + value2)",,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.006s,PASSED
f = new java.io.File(D:\InsertTripDetails_ID.txt),,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.012s,PASSED
f.write(value2),,,,2019-09-23 21:20:44,2019-09-23 21:20:44,0.007s,PASSED
,,,,,,,
Test Cases/cUpdateTripDetails_Test,,,,2019-09-23 21:20:44,2019-09-23 21:20:45,0.841s,PASSED
file1 = new java.io.File(D:\InsertTripDetails_ID.txt),,,,2019-09-23 21:20:45,2019-09-23 21:20:45,0.000s,PASSED
triPID = file1.readLines(),,,,2019-09-23 21:20:45,2019-09-23 21:20:45,0.006s,PASSED
"println(""-------------->"" + triPID)",,,,2019-09-23 21:20:45,2019-09-23 21:20:45,0.001s,PASSED
"sendRequest(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 21:20:45,2019-09-23 21:20:45,0.223s,PASSED
"sendRequest(findTestObject(""cUpdate Trip Detail"", [""uptripiD"":triPID, ""userId"":userid]))",,,,2019-09-23 21:20:45,2019-09-23 21:20:45,0.253s,PASSED
,,,,,,,
Test Cases/d.VersionMaster_Test,,,,2019-09-23 21:20:45,2019-09-23 21:20:46,0.858s,PASSED
"sendRequestAndVerify(findTestObject(""d.Version Master"", [""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:20:46,2019-09-23 21:20:46,0.638s,PASSED
,,,,,,,
Test Cases/dLeaveType_Test,,,,2019-09-23 21:20:46,2019-09-23 21:20:47,0.826s,PASSED
"sendRequestAndVerify(findTestObject(""eLeave Type"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:20:46,2019-09-23 21:20:47,0.605s,PASSED
,,,,,,,
Test Cases/eLeaveApplication_Test,,,,2019-09-23 21:20:47,2019-09-23 21:20:48,0.828s,PASSED
"sendRequestAndVerify(findTestObject(""eLeave Application"", [""leavetypeId"":leavetypeId, ""fromdaTe"":fromdaTe, ""todaTe"":todaTe, ""commenTs"":commenTs, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:20:47,2019-09-23 21:20:48,0.628s,PASSED
,,,,,,,
Test Cases/eLeaveCancelApplicationTest,,,,2019-09-23 21:20:48,2019-09-23 21:20:49,0.867s,PASSED
"sendRequestAndVerify(findTestObject(""eLeave Cancel Application"", [""userId"":userid, ""uniqueToken"":uniquetoken, ""fromdaTe"":fromdaTe, ""todaTe"":todaTe]))",,,,2019-09-23 21:20:48,2019-09-23 21:20:49,0.613s,PASSED
,,,,,,,
Test Cases/gCropMasterTest,,,,2019-09-23 21:20:49,2019-09-23 21:20:50,0.859s,PASSED
"sendRequestAndVerify(findTestObject(""gCrop-Master"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:20:49,2019-09-23 21:20:50,0.651s,PASSED
,,,,,,,
Test Cases/hProductMaster_Test,,,,2019-09-23 21:20:50,2019-09-23 21:20:50,0.823s,PASSED
"sendRequestAndVerify(findTestObject(""iUser_Crop_Product"", [""versiontableId"":"""", ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:20:50,2019-09-23 21:20:50,0.602s,PASSED
,,,,,,,
Test Cases/iUserCropProduct_Test,,,,2019-09-23 21:20:50,2019-09-23 21:20:51,0.759s,PASSED
"sendRequestAndVerify(findTestObject(""iUser_Crop_Product"", [""versiontableId"":"""", ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:20:51,2019-09-23 21:20:51,0.523s,PASSED
,,,,,,,
Test Cases/jUserGeographyDetails_Test,,,,2019-09-23 21:20:51,2019-09-23 21:20:52,0.887s,PASSED
"sendRequestAndVerify(findTestObject(""jUser Geography Details"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:20:51,2019-09-23 21:20:52,0.664s,PASSED
,,,,,,,
Test Cases/kUserTimeline_Test,,,,2019-09-23 21:20:52,2019-09-23 21:20:53,1.008s,PASSED
"sendRequestAndVerify(findTestObject(""kUserTimeline"", [""fromdaTe"":fromdaTe, ""todaTe"":todaTe, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:20:52,2019-09-23 21:20:53,0.615s,PASSED
,,,,,,,
Test Cases/lSeverityMaster_Test,,,,2019-09-23 21:20:53,2019-09-23 21:20:54,0.747s,PASSED
"sendRequestAndVerify(findTestObject(""lSeverity Master"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:20:53,2019-09-23 21:20:54,0.514s,PASSED
,,,,,,,
Test Cases/mQuestionAnswerMaster_Test,,,,2019-09-23 21:20:54,2019-09-23 21:20:55,0.806s,PASSED
"sendRequestAndVerify(findTestObject(""mQuestion Answer Master"", [""lobID"":lobID, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:20:54,2019-09-23 21:20:55,0.583s,PASSED
,,,,,,,
Test Cases/nHolidayMaster_Test,,,,2019-09-23 21:20:55,2019-09-23 21:20:56,0.874s,PASSED
"sendRequestAndVerify(findTestObject(""nHoliday Master"", [""versiontableId"":versiontableId, ""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 21:20:55,2019-09-23 21:20:56,0.545s,PASSED
,,,,,,,
Test Cases/oRefrenceMaster_Test,,,,2019-09-23 21:20:56,2019-09-23 21:20:57,1.041s,FAILED
"sendRequestAndVerify(findTestObject(""oRefrence Master"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 21:20:56,2019-09-23 21:20:57,0.823s,FAILED
,,,,,,,
Test Cases/pLobByUser_Test,,,,2019-09-23 21:20:57,2019-09-23 21:20:57,0.714s,PASSED
"sendRequestAndVerify(findTestObject(""pLob By User"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 21:20:57,2019-09-23 21:20:57,0.445s,PASSED
,,,,,,,
Test Cases/qActivityHistory_Test,,,,2019-09-23 21:20:57,2019-09-23 21:21:12,15.045s,PASSED
"sendRequestAndVerify(findTestObject(""qActivity History"", [""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:20:58,2019-09-23 21:21:12,14.817s,PASSED
,,,,,,,
Test Cases/RoleAccessUser_Test,,,,2019-09-23 21:21:12,2019-09-23 21:21:14,1.193s,PASSED
"sendRequestAndVerify(findTestObject(""Role Access By User"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 21:21:13,2019-09-23 21:21:13,0.420s,PASSED
"responseR = sendRequestAndVerify(findTestObject(""Role Access By User""))",,,,2019-09-23 21:21:13,2019-09-23 21:21:14,0.547s,PASSED
slurperR = new groovy.json.JsonSlurper(),,,,2019-09-23 21:21:14,2019-09-23 21:21:14,0.000s,PASSED
resultR = slurperR.parseText(responseR.getResponseText()),,,,2019-09-23 21:21:14,2019-09-23 21:21:14,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:14,2019-09-23 21:21:14,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM VALIDATEOTP TEST CASE = "" + resultR)",,,,2019-09-23 21:21:14,2019-09-23 21:21:14,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:14,2019-09-23 21:21:14,0.000s,PASSED
valueR = roleId,,,,2019-09-23 21:21:14,2019-09-23 21:21:14,0.000s,PASSED
loGID = valueR,,,,2019-09-23 21:21:14,2019-09-23 21:21:14,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:14,2019-09-23 21:21:14,0.000s,PASSED
"println(""THE USER LOG ID IS   = "" + loGID)",,,,2019-09-23 21:21:14,2019-09-23 21:21:14,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:14,2019-09-23 21:21:14,0.001s,PASSED
,,,,,,,
Test Cases/sIncidentHistory_Test,,,,2019-09-23 21:21:14,2019-09-23 21:21:15,1.504s,PASSED
"sendRequestAndVerify(findTestObject(""sIncident History"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 21:21:14,2019-09-23 21:21:15,1.295s,PASSED
,,,,,,,
Test Cases/tMergeContactDetail_Test,,,,2019-09-23 21:21:15,2019-09-23 21:21:16,1.196s,PASSED
"sendRequest(findTestObject(""tMerge Contact Detail"", [""countryID"":countryID, ""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 21:21:15,2019-09-23 21:21:16,0.417s,PASSED
"responset = sendRequestAndVerify(findTestObject(""tMerge Contact Detail"", [""countryID"":countryID, ""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 21:21:16,2019-09-23 21:21:16,0.470s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-23 21:21:16,2019-09-23 21:21:16,0.001s,PASSED
resultt = slurpert.parseText(responset.getResponseText()),,,,2019-09-23 21:21:16,2019-09-23 21:21:16,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:16,2019-09-23 21:21:16,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM MERGE CONTACT DETAILS TEST CASE = "" + resultt)",,,,2019-09-23 21:21:16,2019-09-23 21:21:16,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:16,2019-09-23 21:21:16,0.000s,PASSED
,,,,,,,
Test Cases/vInsertIncident_Test,,,,2019-09-23 21:21:16,2019-09-23 21:21:17,1.086s,PASSED
"incidenTID = toUpperCase().replace(""-"", """")",,,,2019-09-23 21:21:17,2019-09-23 21:21:17,0.001s,PASSED
println(incidenTID),,,,2019-09-23 21:21:17,2019-09-23 21:21:17,0.000s,PASSED
now = new java.util.Date(),,,,2019-09-23 21:21:17,2019-09-23 21:21:17,0.001s,PASSED
"incidenTDate = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 21:21:17,2019-09-23 21:21:17,0.000s,PASSED
println(incidenTDate),,,,2019-09-23 21:21:17,2019-09-23 21:21:17,0.001s,PASSED
"sendRequest(findTestObject(""vInsert Incident"", [""userId"":userid, ""uniqueToken"":uniquetoken, ""incidentID"":incidenTID, ""incidentDate"":incidenTDate, ""checkInLocality"":checkInLocality, ... ]))",,,,2019-09-23 21:21:17,2019-09-23 21:21:17,0.196s,PASSED
"responsev = sendRequestAndVerify(findTestObject(""vInsert Incident"", [""userId"":userid, ""uniqueToken"":uniquetoken, ""incidentID"":incidenTID, ""incidentDate"":incidenTDate, ""checkInLocality"":checkInLocality, ... ]))",,,,2019-09-23 21:21:17,2019-09-23 21:21:17,0.575s,PASSED
slurperv = new groovy.json.JsonSlurper(),,,,2019-09-23 21:21:17,2019-09-23 21:21:17,0.000s,PASSED
resultv = slurperv.parseText(responsev.getResponseText()),,,,2019-09-23 21:21:17,2019-09-23 21:21:17,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:17,2019-09-23 21:21:17,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM ISERT INCIDENT TEST CASE = "" + resultv)",,,,2019-09-23 21:21:17,2019-09-23 21:21:17,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:17,2019-09-23 21:21:17,0.000s,PASSED
,,,,,,,
Test Cases/xDasboard_Test,,,,2019-09-23 21:21:17,2019-09-23 21:21:18,1.016s,PASSED
now = new java.util.Date(),,,,2019-09-23 21:21:18,2019-09-23 21:21:18,0.001s,PASSED
"fromDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 21:21:18,2019-09-23 21:21:18,0.001s,PASSED
println(fromDatE),,,,2019-09-23 21:21:18,2019-09-23 21:21:18,0.000s,PASSED
"toDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 21:21:18,2019-09-23 21:21:18,0.001s,PASSED
println(toDatE),,,,2019-09-23 21:21:18,2019-09-23 21:21:18,0.000s,PASSED
"sendRequest(findTestObject(""xDashboard"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-23 21:21:18,2019-09-23 21:21:18,0.236s,PASSED
"responsex = sendRequestAndVerify(findTestObject(""xDashboard"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-23 21:21:18,2019-09-23 21:21:18,0.556s,PASSED
slurperx = new groovy.json.JsonSlurper(),,,,2019-09-23 21:21:18,2019-09-23 21:21:18,0.001s,PASSED
resultx = slurperx.parseText(responsex.getResponseText()),,,,2019-09-23 21:21:18,2019-09-23 21:21:18,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:18,2019-09-23 21:21:18,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM DASBOARD TEST CASE = "" + resultx)",,,,2019-09-23 21:21:18,2019-09-23 21:21:18,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:18,2019-09-23 21:21:18,0.000s,PASSED
,,,,,,,
Test Cases/wDiseaseMaster_Test,,,,2019-09-23 21:21:18,2019-09-23 21:21:19,0.835s,PASSED
"sendRequest(findTestObject(""wDisease Master"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""versionTableId"":versionTableId]))",,,,2019-09-23 21:21:19,2019-09-23 21:21:19,0.174s,PASSED
"responsew = sendRequestAndVerify(findTestObject(""wDisease Master"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""versionTableId"":versionTableId]))",,,,2019-09-23 21:21:19,2019-09-23 21:21:19,0.443s,PASSED
slurperw = new groovy.json.JsonSlurper(),,,,2019-09-23 21:21:19,2019-09-23 21:21:19,0.000s,PASSED
resultw = slurperw.parseText(responsew.getResponseText()),,,,2019-09-23 21:21:19,2019-09-23 21:21:19,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:19,2019-09-23 21:21:19,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM DISEASE MASTER  TEST CASE = "" + resultw)",,,,2019-09-23 21:21:19,2019-09-23 21:21:19,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:19,2019-09-23 21:21:19,0.000s,PASSED
,,,,,,,
Test Cases/zMobileAppVersion_Test,,,,2019-09-23 21:21:19,2019-09-23 21:21:20,0.717s,PASSED
"sendRequest(findTestObject(""zMobile App Version"", [""uniqueToken"":uniquetoken, ""oparatingSystem"":oparatingSystem, ""versionNumber"":versionNumber]))",,,,2019-09-23 21:21:19,2019-09-23 21:21:20,0.147s,PASSED
"responsez = sendRequestAndVerify(findTestObject(""zMobile App Version"", [""uniqueToken"":uniquetoken, ""oparatingSystem"":oparatingSystem, ""versionNumber"":versionNumber]))",,,,2019-09-23 21:21:20,2019-09-23 21:21:20,0.358s,PASSED
slurperz = new groovy.json.JsonSlurper(),,,,2019-09-23 21:21:20,2019-09-23 21:21:20,0.000s,PASSED
resultz = slurperz.parseText(responsez.getResponseText()),,,,2019-09-23 21:21:20,2019-09-23 21:21:20,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:20,2019-09-23 21:21:20,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM MOBILE APP VERSION TEST CASE = "" + resultz)",,,,2019-09-23 21:21:20,2019-09-23 21:21:20,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:20,2019-09-23 21:21:20,0.000s,PASSED
,,,,,,,
Test Cases/zActivityCategory_Test,,,,2019-09-23 21:21:20,2019-09-23 21:21:21,1.204s,PASSED
"sendRequest(findTestObject(""zActivity Category"", [""versiontableID"":versiontableID, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:21:20,2019-09-23 21:21:20,0.204s,PASSED
"responsez1 = sendRequestAndVerify(findTestObject(""zActivity Category"", [""versiontableID"":versiontableID, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-23 21:21:20,2019-09-23 21:21:21,0.784s,PASSED
slurperz1 = new groovy.json.JsonSlurper(),,,,2019-09-23 21:21:21,2019-09-23 21:21:21,0.000s,PASSED
resultz1 = slurperz1.parseText(responsez1.getResponseText()),,,,2019-09-23 21:21:21,2019-09-23 21:21:21,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:21,2019-09-23 21:21:21,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM ACTIVITY CATEGORY TEST CASE = "" + resultz1)",,,,2019-09-23 21:21:21,2019-09-23 21:21:21,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:21,2019-09-23 21:21:21,0.001s,PASSED
,,,,,,,
Test Cases/z1SupervisiorTeamStatus_Test,,,,2019-09-23 21:21:21,2019-09-23 21:21:22,0.916s,PASSED
now = new java.util.Date(),,,,2019-09-23 21:21:21,2019-09-23 21:21:21,0.000s,PASSED
"fromDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 21:21:21,2019-09-23 21:21:21,0.000s,PASSED
println(fromDatE),,,,2019-09-23 21:21:21,2019-09-23 21:21:21,0.000s,PASSED
"toDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 21:21:21,2019-09-23 21:21:21,0.000s,PASSED
println(toDatE),,,,2019-09-23 21:21:21,2019-09-23 21:21:21,0.000s,PASSED
"sendRequest(findTestObject(""z1Supervisior Team Status"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-23 21:21:21,2019-09-23 21:21:22,0.194s,PASSED
"responsez1 = sendRequestAndVerify(findTestObject(""z1Supervisior Team Status"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-23 21:21:22,2019-09-23 21:21:22,0.499s,PASSED
slurperz1 = new groovy.json.JsonSlurper(),,,,2019-09-23 21:21:22,2019-09-23 21:21:22,0.001s,PASSED
resultz1 = slurperz1.parseText(responsez1.getResponseText()),,,,2019-09-23 21:21:22,2019-09-23 21:21:22,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:22,2019-09-23 21:21:22,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM SUPERVISIOR TEAM STATUS TEST CASE = "" + resultz1)",,,,2019-09-23 21:21:22,2019-09-23 21:21:22,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:22,2019-09-23 21:21:22,0.000s,PASSED
,,,,,,,
Test Cases/z2Supervisior Users,,,,2019-09-23 21:21:22,2019-09-23 21:21:23,0.987s,PASSED
now = new java.util.Date(),,,,2019-09-23 21:21:22,2019-09-23 21:21:22,0.001s,PASSED
"fromDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 21:21:22,2019-09-23 21:21:22,0.001s,PASSED
println(fromDatE),,,,2019-09-23 21:21:22,2019-09-23 21:21:22,0.001s,PASSED
"toDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 21:21:22,2019-09-23 21:21:22,0.001s,PASSED
println(toDatE),,,,2019-09-23 21:21:22,2019-09-23 21:21:22,0.002s,PASSED
"sendRequest(findTestObject(""z2Supervisior Users"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-23 21:21:22,2019-09-23 21:21:23,0.225s,PASSED
"responsez2 = sendRequestAndVerify(findTestObject(""z2Supervisior Users"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-23 21:21:23,2019-09-23 21:21:23,0.475s,PASSED
slurperz2 = new groovy.json.JsonSlurper(),,,,2019-09-23 21:21:23,2019-09-23 21:21:23,0.000s,PASSED
resultz2 = slurperz2.parseText(responsez2.getResponseText()),,,,2019-09-23 21:21:23,2019-09-23 21:21:23,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:23,2019-09-23 21:21:23,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM SUPERVISIOR USERS TEST CASE = "" + resultz2)",,,,2019-09-23 21:21:23,2019-09-23 21:21:23,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 21:21:23,2019-09-23 21:21:23,0.000s,PASSED
