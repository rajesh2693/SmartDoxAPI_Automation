Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
SMARTINDONASIA_API_SmokeTest,,,,2019-09-23 17:46:14,2019-09-23 17:46:22,8.056s,INCOMPLETE
,,,,,,,
Test Cases/a.ValidateMobileNumber_Test,,,,2019-09-23 17:46:14,2019-09-23 17:46:17,3.250s,PASSED
"sendRequest(findTestObject(""aValidate Mobile Number"", [""protocal"":Endpoint]))",,,,2019-09-23 17:46:14,2019-09-23 17:46:16,1.653s,PASSED
"response = sendRequestAndVerify(findTestObject(""aValidate Mobile Number"", [""protocal"":Endpoint]))",,,,2019-09-23 17:46:16,2019-09-23 17:46:17,1.142s,PASSED
slurper = new groovy.json.JsonSlurper(),,,,2019-09-23 17:46:17,2019-09-23 17:46:17,0.010s,PASSED
result = slurper.parseText(response.getResponseText()),,,,2019-09-23 17:46:17,2019-09-23 17:46:17,0.021s,PASSED
"println(""***************************************"")",,,,2019-09-23 17:46:17,2019-09-23 17:46:17,0.005s,PASSED
"println(""THIS IS THE RESPONSE FROM VALIDATEMOBILENUMBER TEST CASE = "" + result)",,,,2019-09-23 17:46:17,2019-09-23 17:46:17,0.004s,PASSED
"println(""***************************************"")",,,,2019-09-23 17:46:17,2019-09-23 17:46:17,0.001s,PASSED
value = uniqueTokenCode,,,,2019-09-23 17:46:17,2019-09-23 17:46:17,0.008s,PASSED
println(value),,,,2019-09-23 17:46:17,2019-09-23 17:46:17,0.002s,PASSED
uniquetoken = value,,,,2019-09-23 17:46:17,2019-09-23 17:46:17,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-23 17:46:17,2019-09-23 17:46:17,0.002s,PASSED
"println(""UNIQ TOKEN ID IS GENARATED  = "" + uniquetoken)",,,,2019-09-23 17:46:17,2019-09-23 17:46:17,0.003s,PASSED
"println(""***************************************"")",,,,2019-09-23 17:46:17,2019-09-23 17:46:17,0.001s,PASSED
,,,,,,,
Test Cases/aValidate_OTPTest,,,,2019-09-23 17:46:17,2019-09-23 17:46:18,0.935s,ERROR
"sendRequest(findTestObject(""aValidate Mobile Number"", [""protocal"":Endpoint, ""mobiLe"":0]))",,,,2019-09-23 17:46:18,2019-09-23 17:46:18,0.377s,PASSED
"response1 = sendRequest(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 17:46:18,2019-09-23 17:46:18,0.171s,PASSED
slurper1 = new groovy.json.JsonSlurper(),,,,2019-09-23 17:46:18,2019-09-23 17:46:18,0.001s,PASSED
result1 = slurper1.parseText(responseBodyContent),,,,2019-09-23 17:46:18,2019-09-23 17:46:18,0.002s,PASSED
,,,,,,,
Test Cases/bInsertUser_CheckInTest,,,,2019-09-23 17:46:18,2019-09-23 17:46:19,0.709s,ERROR
chkInID = toString().toUpperCase(),,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.008s,PASSED
println(chkInID),,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.001s,PASSED
now = new java.util.Date(),,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.040s,PASSED
"chkInTime = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.005s,PASSED
println(chkInTime),,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.002s,PASSED
"resp3 = sendRequest(findTestObject(""bInsert User CheckIn"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""checkInTime"":chkInTime, ""checkInID"":chkInID, ""checkinLocality"":checkinLocality]))",,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.265s,PASSED
slurper3 = new groovy.json.JsonSlurper(),,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.014s,PASSED
result3 = slurper3.parseText(resp3.getResponseText()),,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.001s,PASSED
,,,,,,,
Test Cases/bUpdateUser_CheckInTest,,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.629s,PASSED
file3 = new java.io.File(D:\Checkin_ID.txt),,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.001s,PASSED
checkinID = file3.readLines(),,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.008s,PASSED
"println(""-------------->"" + checkinID)",,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.001s,PASSED
now1 = new java.util.Date(),,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.002s,PASSED
"chkOutTime = now1.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.005s,PASSED
println(chkOutTime),,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.004s,PASSED
"resp4 = sendRequest(findTestObject(""bUpdate User CheckIn"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""checkinID"":checkinID, ""checkedOutTime"":chkOutTime]))",,,,2019-09-23 17:46:19,2019-09-23 17:46:19,0.254s,PASSED
,,,,,,,
Test Cases/cInsertTripDetails_Test,,,,2019-09-23 17:46:20,2019-09-23 17:46:21,1.290s,ERROR
"sendRequestAndVerify(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 17:46:20,2019-09-23 17:46:21,0.654s,PASSED
triPID = toString().toUpperCase(),,,,2019-09-23 17:46:21,2019-09-23 17:46:21,0.002s,PASSED
println(triPID),,,,2019-09-23 17:46:21,2019-09-23 17:46:21,0.001s,PASSED
now = new java.util.Date(),,,,2019-09-23 17:46:21,2019-09-23 17:46:21,0.000s,PASSED
"tiMe = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-23 17:46:21,2019-09-23 17:46:21,0.000s,PASSED
println(tiMe),,,,2019-09-23 17:46:21,2019-09-23 17:46:21,0.001s,PASSED
"resp2 = sendRequest(findTestObject(""cInsert Trip Detail"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""tripid"":triPID, ""startriptime"":tiMe, ""startripLocality"":startripLocality]))",,,,2019-09-23 17:46:21,2019-09-23 17:46:21,0.205s,PASSED
slurper2 = new groovy.json.JsonSlurper(),,,,2019-09-23 17:46:21,2019-09-23 17:46:21,0.001s,PASSED
result2 = slurper2.parseText(resp2.getResponseText()),,,,2019-09-23 17:46:21,2019-09-23 17:46:21,0.000s,PASSED
,,,,,,,
Test Cases/cUpdateTripDetails_Test,,,,2019-09-23 17:46:21,2019-09-23 17:46:22,0.842s,PASSED
file1 = new java.io.File(D:\InsertTripDetails_ID.txt),,,,2019-09-23 17:46:21,2019-09-23 17:46:21,0.001s,PASSED
triPID = file1.readLines(),,,,2019-09-23 17:46:21,2019-09-23 17:46:21,0.005s,PASSED
"println(""-------------->"" + triPID)",,,,2019-09-23 17:46:21,2019-09-23 17:46:21,0.002s,PASSED
"sendRequest(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-23 17:46:21,2019-09-23 17:46:21,0.203s,PASSED
"sendRequest(findTestObject(""cUpdate Trip Detail"", [""uptripiD"":triPID, ""userId"":userid]))",,,,2019-09-23 17:46:21,2019-09-23 17:46:22,0.324s,PASSED
