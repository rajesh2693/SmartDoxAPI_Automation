Suite/Test/Step Name,Browser,Description,Tag,Start time,End time,Duration,Status
SMARTINDONASIA_API_SmokeTest,,,,2019-09-24 15:01:24,2019-09-24 15:02:21,57.373s,INCOMPLETE
,,,,,,,
Test Cases/a.ValidateMobileNumber_Test,,,,2019-09-24 15:01:24,2019-09-24 15:01:33,9.361s,PASSED
"sendRequest(findTestObject(""aValidate Mobile Number"", [""protocal"":Endpoint]))",,,,2019-09-24 15:01:24,2019-09-24 15:01:32,7.569s,PASSED
"response = sendRequestAndVerify(findTestObject(""aValidate Mobile Number"", [""protocal"":Endpoint]))",,,,2019-09-24 15:01:32,2019-09-24 15:01:33,1.235s,PASSED
slurper = new groovy.json.JsonSlurper(),,,,2019-09-24 15:01:33,2019-09-24 15:01:33,0.012s,PASSED
result = slurper.parseText(response.getResponseText()),,,,2019-09-24 15:01:33,2019-09-24 15:01:33,0.024s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:01:33,2019-09-24 15:01:33,0.007s,PASSED
"println(""THIS IS THE RESPONSE FROM VALIDATEMOBILENUMBER TEST CASE = "" + result)",,,,2019-09-24 15:01:33,2019-09-24 15:01:33,0.003s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:01:33,2019-09-24 15:01:33,0.004s,PASSED
value = uniqueTokenCode,,,,2019-09-24 15:01:33,2019-09-24 15:01:33,0.022s,PASSED
println(value),,,,2019-09-24 15:01:33,2019-09-24 15:01:33,0.002s,PASSED
uniquetoken = value,,,,2019-09-24 15:01:33,2019-09-24 15:01:33,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:01:33,2019-09-24 15:01:33,0.008s,PASSED
"println(""UNIQ TOKEN ID IS GENARATED  = "" + uniquetoken)",,,,2019-09-24 15:01:33,2019-09-24 15:01:33,0.004s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:01:33,2019-09-24 15:01:33,0.002s,PASSED
,,,,,,,
Test Cases/aValidate_OTPTest,,,,2019-09-24 15:01:33,2019-09-24 15:01:35,1.380s,PASSED
"sendRequest(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-24 15:01:34,2019-09-24 15:01:34,0.398s,PASSED
"response1 = sendRequest(findTestObject(""aValidate Mobile Number""))",,,,2019-09-24 15:01:34,2019-09-24 15:01:35,0.292s,PASSED
slurper1 = new groovy.json.JsonSlurper(),,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.000s,PASSED
result1 = slurper1.parseText(responseBodyContent),,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM VALIDATEOTP TEST CASE = "" + result1)",,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.000s,PASSED
value1 = userId,,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.000s,PASSED
userid = value1,,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.000s,PASSED
"println(""THE USER ID IS GENARATED  = "" + userid)",,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.000s,PASSED
,,,,,,,
Test Cases/bInsertUser_CheckInTest,,,,2019-09-24 15:01:35,2019-09-24 15:01:36,0.881s,PASSED
chkInID = toString().toUpperCase(),,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.001s,PASSED
println(chkInID),,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.000s,PASSED
now = new java.util.Date(),,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.020s,PASSED
"chkInTime = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.000s,PASSED
println(chkInTime),,,,2019-09-24 15:01:35,2019-09-24 15:01:35,0.010s,PASSED
"resp3 = sendRequest(findTestObject(""bInsert User CheckIn"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""checkInTime"":chkInTime, ""checkInID"":chkInID, ""checkinLocality"":checkinLocality]))",,,,2019-09-24 15:01:35,2019-09-24 15:01:36,0.351s,PASSED
slurper3 = new groovy.json.JsonSlurper(),,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.001s,PASSED
result3 = slurper3.parseText(resp3.getResponseText()),,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.002s,PASSED
"println(""***************************************
"")",,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.005s,PASSED
"println(""THIS IS THE RESPONSE FROM USER_CHECKIN TEST CASE = "" + result3)",,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.009s,PASSED
"println(""***************************************
"")",,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.003s,PASSED
"toString().split(chkInID, 0)",,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.009s,PASSED
"value3 = toString().substring(11, 47)",,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.003s,PASSED
println(value3),,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.002s,PASSED
"println(""THE CHECKIN  iD IS   = "" + value3)",,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.001s,PASSED
f = new java.io.File(D:\Checkin_ID.txt),,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.007s,PASSED
f.write(value3),,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.032s,PASSED
,,,,,,,
Test Cases/bUpdateUser_CheckInTest,,,,2019-09-24 15:01:36,2019-09-24 15:01:37,1.034s,PASSED
file3 = new java.io.File(D:\Checkin_ID.txt),,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.004s,PASSED
checkinID = file3.readLines(),,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.157s,PASSED
"println(""-------------->"" + checkinID)",,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.001s,PASSED
now1 = new java.util.Date(),,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.000s,PASSED
"chkOutTime = now1.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.000s,PASSED
println(chkOutTime),,,,2019-09-24 15:01:36,2019-09-24 15:01:36,0.000s,PASSED
"resp4 = sendRequest(findTestObject(""bUpdate User CheckIn"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""checkinID"":checkinID, ""checkedOutTime"":chkOutTime]))",,,,2019-09-24 15:01:36,2019-09-24 15:01:37,0.402s,PASSED
,,,,,,,
Test Cases/cInsertTripDetails_Test,,,,2019-09-24 15:01:37,2019-09-24 15:01:38,1.369s,PASSED
"sendRequestAndVerify(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-24 15:01:37,2019-09-24 15:01:38,0.649s,PASSED
triPID = toString().toUpperCase(),,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
println(triPID),,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
now = new java.util.Date(),,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
"tiMe = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
println(tiMe),,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
"resp2 = sendRequest(findTestObject(""cInsert Trip Detail"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""tripid"":triPID, ""startriptime"":tiMe, ""startripLocality"":startripLocality]))",,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.256s,PASSED
slurper2 = new groovy.json.JsonSlurper(),,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
result2 = slurper2.parseText(resp2.getResponseText()),,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
"println(""***************************************
"")",,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.010s,PASSED
"println(""THIS IS THE RESPONSE FROM INSERT TRIP DETAILS  TEST CASE = "" + result2)",,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
"println(""***************************************
"")",,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
"toString().split(triPID, 0)",,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
"value2 = toString().substring(25, 61)",,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
println(value2),,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
"println(""THE TRIP iD IS   = "" + value2)",,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
f = new java.io.File(D:\InsertTripDetails_ID.txt),,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
f.write(value2),,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.032s,PASSED
,,,,,,,
Test Cases/cUpdateTripDetails_Test,,,,2019-09-24 15:01:38,2019-09-24 15:01:39,0.705s,PASSED
file1 = new java.io.File(D:\InsertTripDetails_ID.txt),,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
triPID = file1.readLines(),,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.000s,PASSED
"println(""-------------->"" + triPID)",,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.001s,PASSED
"sendRequest(findTestObject(""aValidate OTP"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-24 15:01:38,2019-09-24 15:01:38,0.205s,PASSED
"sendRequest(findTestObject(""cUpdate Trip Detail"", [""uptripiD"":triPID, ""userId"":userid]))",,,,2019-09-24 15:01:38,2019-09-24 15:01:39,0.259s,PASSED
,,,,,,,
Test Cases/d.VersionMaster_Test,,,,2019-09-24 15:01:39,2019-09-24 15:01:40,0.991s,PASSED
"sendRequestAndVerify(findTestObject(""d.Version Master"", [""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:01:39,2019-09-24 15:01:40,0.772s,PASSED
,,,,,,,
Test Cases/dLeaveType_Test,,,,2019-09-24 15:01:40,2019-09-24 15:01:41,0.928s,PASSED
"sendRequestAndVerify(findTestObject(""eLeave Type"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:01:40,2019-09-24 15:01:41,0.731s,PASSED
,,,,,,,
Test Cases/eLeaveApplication_Test,,,,2019-09-24 15:01:41,2019-09-24 15:01:42,1.183s,PASSED
"sendRequestAndVerify(findTestObject(""eLeave Application"", [""leavetypeId"":leavetypeId, ""fromdaTe"":fromdaTe, ""todaTe"":todaTe, ""commenTs"":commenTs, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:01:41,2019-09-24 15:01:42,0.820s,PASSED
,,,,,,,
Test Cases/eLeaveCancelApplicationTest,,,,2019-09-24 15:01:42,2019-09-24 15:01:43,0.959s,PASSED
"sendRequestAndVerify(findTestObject(""eLeave Cancel Application"", [""userId"":userid, ""uniqueToken"":uniquetoken, ""fromdaTe"":fromdaTe, ""todaTe"":todaTe]))",,,,2019-09-24 15:01:42,2019-09-24 15:01:43,0.692s,PASSED
,,,,,,,
Test Cases/gCropMasterTest,,,,2019-09-24 15:01:43,2019-09-24 15:01:44,0.968s,PASSED
"sendRequestAndVerify(findTestObject(""gCrop-Master"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:01:43,2019-09-24 15:01:44,0.735s,PASSED
,,,,,,,
Test Cases/hProductMaster_Test,,,,2019-09-24 15:01:44,2019-09-24 15:01:45,1.601s,PASSED
"sendRequestAndVerify(findTestObject(""iUser_Crop_Product"", [""versiontableId"":"""", ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:01:44,2019-09-24 15:01:45,1.328s,PASSED
,,,,,,,
Test Cases/iUserCropProduct_Test,,,,2019-09-24 15:01:45,2019-09-24 15:01:46,0.951s,PASSED
"sendRequestAndVerify(findTestObject(""iUser_Crop_Product"", [""versiontableId"":"""", ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:01:46,2019-09-24 15:01:46,0.677s,PASSED
,,,,,,,
Test Cases/jUserGeographyDetails_Test,,,,2019-09-24 15:01:46,2019-09-24 15:01:48,1.089s,PASSED
"sendRequestAndVerify(findTestObject(""jUser Geography Details"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:01:47,2019-09-24 15:01:48,0.812s,PASSED
,,,,,,,
Test Cases/kUserTimeline_Test,,,,2019-09-24 15:01:48,2019-09-24 15:01:49,0.985s,PASSED
"sendRequestAndVerify(findTestObject(""kUserTimeline"", [""fromdaTe"":fromdaTe, ""todaTe"":todaTe, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:01:48,2019-09-24 15:01:49,0.608s,PASSED
,,,,,,,
Test Cases/lSeverityMaster_Test,,,,2019-09-24 15:01:49,2019-09-24 15:01:49,0.957s,PASSED
"sendRequestAndVerify(findTestObject(""lSeverity Master"", [""versiontableId"":versiontableId, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:01:49,2019-09-24 15:01:49,0.707s,PASSED
,,,,,,,
Test Cases/mQuestionAnswerMaster_Test,,,,2019-09-24 15:01:49,2019-09-24 15:01:50,0.830s,PASSED
"sendRequestAndVerify(findTestObject(""mQuestion Answer Master"", [""lobID"":lobID, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:01:50,2019-09-24 15:01:50,0.609s,PASSED
,,,,,,,
Test Cases/nHolidayMaster_Test,,,,2019-09-24 15:01:50,2019-09-24 15:01:51,0.778s,PASSED
"sendRequestAndVerify(findTestObject(""nHoliday Master"", [""versiontableId"":versiontableId, ""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-24 15:01:51,2019-09-24 15:01:51,0.539s,PASSED
,,,,,,,
Test Cases/oRefrenceMaster_Test,,,,2019-09-24 15:01:51,2019-09-24 15:01:52,1.225s,FAILED
"sendRequestAndVerify(findTestObject(""oRefrence Master"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-24 15:01:51,2019-09-24 15:01:52,0.871s,FAILED
,,,,,,,
Test Cases/pLobByUser_Test,,,,2019-09-24 15:01:52,2019-09-24 15:01:53,0.669s,PASSED
"sendRequestAndVerify(findTestObject(""pLob By User"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-24 15:01:53,2019-09-24 15:01:53,0.465s,PASSED
,,,,,,,
Test Cases/qActivityHistory_Test,,,,2019-09-24 15:01:53,2019-09-24 15:02:09,16.369s,PASSED
"sendRequestAndVerify(findTestObject(""qActivity History"", [""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:01:53,2019-09-24 15:02:09,16.118s,PASSED
,,,,,,,
Test Cases/RoleAccessUser_Test,,,,2019-09-24 15:02:09,2019-09-24 15:02:11,1.499s,PASSED
"sendRequestAndVerify(findTestObject(""Role Access By User"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-24 15:02:10,2019-09-24 15:02:10,0.771s,PASSED
"responseR = sendRequestAndVerify(findTestObject(""Role Access By User""))",,,,2019-09-24 15:02:10,2019-09-24 15:02:11,0.522s,PASSED
slurperR = new groovy.json.JsonSlurper(),,,,2019-09-24 15:02:11,2019-09-24 15:02:11,0.000s,PASSED
resultR = slurperR.parseText(responseR.getResponseText()),,,,2019-09-24 15:02:11,2019-09-24 15:02:11,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:11,2019-09-24 15:02:11,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM VALIDATEOTP TEST CASE = "" + resultR)",,,,2019-09-24 15:02:11,2019-09-24 15:02:11,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:11,2019-09-24 15:02:11,0.000s,PASSED
valueR = roleId,,,,2019-09-24 15:02:11,2019-09-24 15:02:11,0.000s,PASSED
loGID = valueR,,,,2019-09-24 15:02:11,2019-09-24 15:02:11,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:11,2019-09-24 15:02:11,0.000s,PASSED
"println(""THE USER LOG ID IS   = "" + loGID)",,,,2019-09-24 15:02:11,2019-09-24 15:02:11,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:11,2019-09-24 15:02:11,0.000s,PASSED
,,,,,,,
Test Cases/sIncidentHistory_Test,,,,2019-09-24 15:02:11,2019-09-24 15:02:12,1.367s,PASSED
"sendRequestAndVerify(findTestObject(""sIncident History"", [""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-24 15:02:11,2019-09-24 15:02:12,1.211s,PASSED
,,,,,,,
Test Cases/tMergeContactDetail_Test,,,,2019-09-24 15:02:12,2019-09-24 15:02:14,1.350s,PASSED
"sendRequest(findTestObject(""tMerge Contact Detail"", [""countryID"":countryID, ""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-24 15:02:13,2019-09-24 15:02:13,0.258s,PASSED
"responset = sendRequestAndVerify(findTestObject(""tMerge Contact Detail"", [""countryID"":countryID, ""uniqueToken"":uniquetoken, ""userId"":userid]))",,,,2019-09-24 15:02:13,2019-09-24 15:02:14,0.863s,PASSED
slurpert = new groovy.json.JsonSlurper(),,,,2019-09-24 15:02:14,2019-09-24 15:02:14,0.001s,PASSED
resultt = slurpert.parseText(responset.getResponseText()),,,,2019-09-24 15:02:14,2019-09-24 15:02:14,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:14,2019-09-24 15:02:14,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM MERGE CONTACT DETAILS TEST CASE = "" + resultt)",,,,2019-09-24 15:02:14,2019-09-24 15:02:14,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:14,2019-09-24 15:02:14,0.001s,PASSED
,,,,,,,
Test Cases/vInsertIncident_Test,,,,2019-09-24 15:02:14,2019-09-24 15:02:15,1.127s,PASSED
"incidenTID = toUpperCase().replace(""-"", """")",,,,2019-09-24 15:02:14,2019-09-24 15:02:14,0.000s,PASSED
println(incidenTID),,,,2019-09-24 15:02:14,2019-09-24 15:02:14,0.000s,PASSED
now = new java.util.Date(),,,,2019-09-24 15:02:14,2019-09-24 15:02:14,0.000s,PASSED
"incidenTDate = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-24 15:02:14,2019-09-24 15:02:14,0.000s,PASSED
println(incidenTDate),,,,2019-09-24 15:02:14,2019-09-24 15:02:14,0.000s,PASSED
"sendRequest(findTestObject(""vInsert Incident"", [""userId"":userid, ""uniqueToken"":uniquetoken, ""incidentID"":incidenTID, ""incidentDate"":incidenTDate, ""checkInLocality"":checkInLocality, ... ]))",,,,2019-09-24 15:02:14,2019-09-24 15:02:14,0.230s,PASSED
"responsev = sendRequestAndVerify(findTestObject(""vInsert Incident"", [""userId"":userid, ""uniqueToken"":uniquetoken, ""incidentID"":incidenTID, ""incidentDate"":incidenTDate, ""checkInLocality"":checkInLocality, ... ]))",,,,2019-09-24 15:02:14,2019-09-24 15:02:15,0.649s,PASSED
slurperv = new groovy.json.JsonSlurper(),,,,2019-09-24 15:02:15,2019-09-24 15:02:15,0.000s,PASSED
resultv = slurperv.parseText(responsev.getResponseText()),,,,2019-09-24 15:02:15,2019-09-24 15:02:15,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:15,2019-09-24 15:02:15,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM ISERT INCIDENT TEST CASE = "" + resultv)",,,,2019-09-24 15:02:15,2019-09-24 15:02:15,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:15,2019-09-24 15:02:15,0.000s,PASSED
,,,,,,,
Test Cases/xDasboard_Test,,,,2019-09-24 15:02:15,2019-09-24 15:02:16,1.008s,PASSED
now = new java.util.Date(),,,,2019-09-24 15:02:15,2019-09-24 15:02:15,0.000s,PASSED
"fromDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-24 15:02:15,2019-09-24 15:02:15,0.010s,PASSED
println(fromDatE),,,,2019-09-24 15:02:15,2019-09-24 15:02:15,0.000s,PASSED
"toDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-24 15:02:15,2019-09-24 15:02:15,0.000s,PASSED
println(toDatE),,,,2019-09-24 15:02:15,2019-09-24 15:02:15,0.000s,PASSED
"sendRequest(findTestObject(""xDashboard"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-24 15:02:15,2019-09-24 15:02:15,0.343s,PASSED
"responsex = sendRequestAndVerify(findTestObject(""xDashboard"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-24 15:02:15,2019-09-24 15:02:16,0.433s,PASSED
slurperx = new groovy.json.JsonSlurper(),,,,2019-09-24 15:02:16,2019-09-24 15:02:16,0.000s,PASSED
resultx = slurperx.parseText(responsex.getResponseText()),,,,2019-09-24 15:02:16,2019-09-24 15:02:16,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:16,2019-09-24 15:02:16,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM DASBOARD TEST CASE = "" + resultx)",,,,2019-09-24 15:02:16,2019-09-24 15:02:16,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:16,2019-09-24 15:02:16,0.000s,PASSED
,,,,,,,
Test Cases/wDiseaseMaster_Test,,,,2019-09-24 15:02:16,2019-09-24 15:02:17,1.090s,PASSED
"sendRequest(findTestObject(""wDisease Master"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""versionTableId"":versionTableId]))",,,,2019-09-24 15:02:16,2019-09-24 15:02:16,0.197s,PASSED
"responsew = sendRequestAndVerify(findTestObject(""wDisease Master"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""versionTableId"":versionTableId]))",,,,2019-09-24 15:02:16,2019-09-24 15:02:17,0.619s,PASSED
slurperw = new groovy.json.JsonSlurper(),,,,2019-09-24 15:02:17,2019-09-24 15:02:17,0.000s,PASSED
resultw = slurperw.parseText(responsew.getResponseText()),,,,2019-09-24 15:02:17,2019-09-24 15:02:17,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:17,2019-09-24 15:02:17,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM DISEASE MASTER  TEST CASE = "" + resultw)",,,,2019-09-24 15:02:17,2019-09-24 15:02:17,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:17,2019-09-24 15:02:17,0.000s,PASSED
,,,,,,,
Test Cases/zMobileAppVersion_Test,,,,2019-09-24 15:02:17,2019-09-24 15:02:18,0.845s,PASSED
"sendRequest(findTestObject(""zMobile App Version"", [""uniqueToken"":uniquetoken, ""oparatingSystem"":oparatingSystem, ""versionNumber"":versionNumber]))",,,,2019-09-24 15:02:17,2019-09-24 15:02:17,0.197s,PASSED
"responsez = sendRequestAndVerify(findTestObject(""zMobile App Version"", [""uniqueToken"":uniquetoken, ""oparatingSystem"":oparatingSystem, ""versionNumber"":versionNumber]))",,,,2019-09-24 15:02:17,2019-09-24 15:02:18,0.430s,PASSED
slurperz = new groovy.json.JsonSlurper(),,,,2019-09-24 15:02:18,2019-09-24 15:02:18,0.000s,PASSED
resultz = slurperz.parseText(responsez.getResponseText()),,,,2019-09-24 15:02:18,2019-09-24 15:02:18,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:18,2019-09-24 15:02:18,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM MOBILE APP VERSION TEST CASE = "" + resultz)",,,,2019-09-24 15:02:18,2019-09-24 15:02:18,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:18,2019-09-24 15:02:18,0.000s,PASSED
,,,,,,,
Test Cases/zActivityCategory_Test,,,,2019-09-24 15:02:18,2019-09-24 15:02:19,1.116s,PASSED
"sendRequest(findTestObject(""zActivity Category"", [""versiontableID"":versiontableID, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:02:18,2019-09-24 15:02:18,0.366s,PASSED
"responsez1 = sendRequestAndVerify(findTestObject(""zActivity Category"", [""versiontableID"":versiontableID, ""userId"":userid, ""uniqueToken"":uniquetoken]))",,,,2019-09-24 15:02:18,2019-09-24 15:02:19,0.551s,PASSED
slurperz1 = new groovy.json.JsonSlurper(),,,,2019-09-24 15:02:19,2019-09-24 15:02:19,0.000s,PASSED
resultz1 = slurperz1.parseText(responsez1.getResponseText()),,,,2019-09-24 15:02:19,2019-09-24 15:02:19,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:19,2019-09-24 15:02:19,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM ACTIVITY CATEGORY TEST CASE = "" + resultz1)",,,,2019-09-24 15:02:19,2019-09-24 15:02:19,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:19,2019-09-24 15:02:19,0.000s,PASSED
,,,,,,,
Test Cases/z1SupervisiorTeamStatus_Test,,,,2019-09-24 15:02:19,2019-09-24 15:02:20,0.921s,PASSED
now = new java.util.Date(),,,,2019-09-24 15:02:19,2019-09-24 15:02:19,0.000s,PASSED
"fromDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-24 15:02:19,2019-09-24 15:02:19,0.000s,PASSED
println(fromDatE),,,,2019-09-24 15:02:19,2019-09-24 15:02:19,0.000s,PASSED
"toDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-24 15:02:19,2019-09-24 15:02:19,0.000s,PASSED
println(toDatE),,,,2019-09-24 15:02:19,2019-09-24 15:02:19,0.000s,PASSED
"sendRequest(findTestObject(""z1Supervisior Team Status"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-24 15:02:19,2019-09-24 15:02:19,0.207s,PASSED
"responsez1 = sendRequestAndVerify(findTestObject(""z1Supervisior Team Status"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-24 15:02:19,2019-09-24 15:02:20,0.548s,PASSED
slurperz1 = new groovy.json.JsonSlurper(),,,,2019-09-24 15:02:20,2019-09-24 15:02:20,0.000s,PASSED
resultz1 = slurperz1.parseText(responsez1.getResponseText()),,,,2019-09-24 15:02:20,2019-09-24 15:02:20,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:20,2019-09-24 15:02:20,0.001s,PASSED
"println(""THIS IS THE RESPONSE FROM SUPERVISIOR TEAM STATUS TEST CASE = "" + resultz1)",,,,2019-09-24 15:02:20,2019-09-24 15:02:20,0.001s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:20,2019-09-24 15:02:20,0.000s,PASSED
,,,,,,,
Test Cases/z2Supervisior Users,,,,2019-09-24 15:02:20,2019-09-24 15:02:21,1.092s,PASSED
now = new java.util.Date(),,,,2019-09-24 15:02:20,2019-09-24 15:02:20,0.000s,PASSED
"fromDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-24 15:02:20,2019-09-24 15:02:20,0.000s,PASSED
println(fromDatE),,,,2019-09-24 15:02:20,2019-09-24 15:02:20,0.000s,PASSED
"toDatE = now.format(""dd-MM-YYYY HH:mm:ss +5:30"")",,,,2019-09-24 15:02:20,2019-09-24 15:02:20,0.000s,PASSED
println(toDatE),,,,2019-09-24 15:02:20,2019-09-24 15:02:20,0.000s,PASSED
"sendRequest(findTestObject(""z2Supervisior Users"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-24 15:02:20,2019-09-24 15:02:20,0.209s,PASSED
"responsez2 = sendRequestAndVerify(findTestObject(""z2Supervisior Users"", [""uniqueToken"":uniquetoken, ""userId"":userid, ""fromDatE"":fromDatE, ""toDatE"":toDatE]))",,,,2019-09-24 15:02:20,2019-09-24 15:02:21,0.499s,PASSED
slurperz2 = new groovy.json.JsonSlurper(),,,,2019-09-24 15:02:21,2019-09-24 15:02:21,0.000s,PASSED
resultz2 = slurperz2.parseText(responsez2.getResponseText()),,,,2019-09-24 15:02:21,2019-09-24 15:02:21,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:21,2019-09-24 15:02:21,0.000s,PASSED
"println(""THIS IS THE RESPONSE FROM SUPERVISIOR USERS TEST CASE = "" + resultz2)",,,,2019-09-24 15:02:21,2019-09-24 15:02:21,0.000s,PASSED
"println(""***************************************"")",,,,2019-09-24 15:02:21,2019-09-24 15:02:21,0.000s,PASSED
